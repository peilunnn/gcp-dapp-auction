name: Deploy FE to Cloud Run

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      network-name:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install global npm dependencies
        run: |
          cd truffle
          npm install -g truffle

      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v1

      - name: Cache node modules in truffle directory
        id: cache-npm-truffle
        uses: actions/cache@v2
        with:
          path: truffle/node_modules
          key: ${{ runner.os }}-truffle-${{ hashFiles('truffle/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-truffle-

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0.4.0"
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Deploy smart contracts to BNE node
        run: |
          cd truffle
          truffle migrate --reset --network ${{ inputs.network-name }}
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          ETH_CLIENT_URL: ${{ secrets.ETH_CLIENT_URL }}
          API_KEY: ${{ secrets.API_KEY }}

      - name: Create .env.${{ inputs.environment }} file
        run: |
          cd client
          if [[ "${{ inputs.environment }}" == "staging" ]]; then
            echo "${{ secrets.ENV_STAGING }}" > .env.staging
          elif [[ "${{ inputs.environment }}" == "production" ]]; then
            echo "${{ secrets.ENV_PRODUCTION }}" > .env.production
          fi

      - name: Build FE image and deploy to Cloud Run
        run: |
          cd client
          docker build -t dapp-fe-image .
          gcloud run deploy dapp-fe-${{ inputs.environment }} --source . --region=asia-southeast1 --port=3000 --service-account=${{ secrets.SERVICE_ACCOUNT }}
