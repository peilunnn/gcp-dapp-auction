name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Set up Docker CLI
        uses: docker/setup-buildx-action@v1

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Echo npm cache directory
        run: echo "npm cache directory is ${{ steps.npm-cache.outputs.dir }}"
        
      - name: Cache node modules
        id: my-cache-step
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: /home/runner/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.my-cache-step.outputs.cache-hit != 'true'
        run: |
          cd truffle
          npm i -g truffle
          npm install --legacy-peer-deps

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0.4.0"
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Deploy smart contracts to BNE Sepolia Testnet
        run: |
          cd truffle
          truffle migrate --reset --network bne
        env:
          MNEMONIC: ${{ secrets.MNEMONIC }}
          ETH_CLIENT_URL: ${{ secrets.ETH_CLIENT_URL }}
          API_KEY: ${{ secrets.API_KEY }}

      - name: Build and deploy FE to Cloud Run
        run: |
          cd client
          docker build -t dapp-fe-image .
          gcloud run deploy dapp-fe-staging --source . --region=asia-southeast1 --port=3000 --service-account=${{ secrets.SERVICE_ACCOUNT }}
