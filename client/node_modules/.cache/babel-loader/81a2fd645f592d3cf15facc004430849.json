{"ast":null,"code":"import axios from \"axios\";\nrequire(\"dotenv\").config();\nconst fs = require(\"fs\");\n// const axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst {\n  storeDataToFile\n} = require(\"./ipfsHelper.js\");\nconst pinataEndpoint = process.env.PINATA_ENDPOINT;\nconst pinataApiKey = process.env.REACT_APP_PINATA_API_KEY;\nconst pinataApiSecret = process.env.REACT_APP_PINATA_API_SECRET;\nconst pinImage = async readStream => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", fs.createReadStream(readStream));\n    // form_data.append(\"file\", readStream);\n    const request = {\n      method: \"post\",\n      url: pinataEndpoint,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataApiSecret,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`\n      },\n      data: form_data\n    };\n    debugger;\n    const response = await axios(request);\n    await storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};\n\n// module.exports = pinImage;\nexport default pinImage;","map":{"version":3,"names":["axios","require","config","fs","FormData","storeDataToFile","pinataEndpoint","process","env","PINATA_ENDPOINT","pinataApiKey","REACT_APP_PINATA_API_KEY","pinataApiSecret","REACT_APP_PINATA_API_SECRET","pinImage","readStream","form_data","append","createReadStream","request","method","url","maxContentLength","headers","pinata_api_key","pinata_secret_api_key","_boundary","data","response","console","log","err"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/scripts/pinImage.js"],"sourcesContent":["import axios from \"axios\";\nrequire(\"dotenv\").config();\nconst fs = require(\"fs\");\n// const axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst { storeDataToFile } = require(\"./ipfsHelper.js\");\n\nconst pinataEndpoint = process.env.PINATA_ENDPOINT;\nconst pinataApiKey = process.env.REACT_APP_PINATA_API_KEY;\nconst pinataApiSecret = process.env.REACT_APP_PINATA_API_SECRET;\n\nconst pinImage = async (readStream) => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", fs.createReadStream(readStream));\n    // form_data.append(\"file\", readStream);\n    const request = {\n      method: \"post\",\n      url: pinataEndpoint,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataApiSecret,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`,\n      },\n      data: form_data,\n    };\n    debugger;\n    const response = await axios(request);\n    await storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};\n\n// module.exports = pinImage;\nexport default pinImage;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzBC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAC1B,MAAMC,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,WAAW,CAAC;AACrC,MAAM;EAAEI;AAAgB,CAAC,GAAGJ,OAAO,CAAC,iBAAiB,CAAC;AAEtD,MAAMK,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe;AAClD,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAG,CAACG,wBAAwB;AACzD,MAAMC,eAAe,GAAGL,OAAO,CAACC,GAAG,CAACK,2BAA2B;AAE/D,MAAMC,QAAQ,GAAG,MAAOC,UAAU,IAAK;EACrC,MAAMC,SAAS,GAAG,IAAIZ,QAAQ,EAAE;EAChC,IAAI;IACFY,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEd,EAAE,CAACe,gBAAgB,CAACH,UAAU,CAAC,CAAC;IACzD;IACA,MAAMI,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAEf,cAAc;MACnBgB,gBAAgB,EAAE,UAAU;MAC5BC,OAAO,EAAE;QACPC,cAAc,EAAEd,YAAY;QAC5Be,qBAAqB,EAAEb,eAAe;QACtC,cAAc,EAAG,iCAAgCI,SAAS,CAACU,SAAU;MACvE,CAAC;MACDC,IAAI,EAAEX;IACR,CAAC;IACD;IACA,MAAMY,QAAQ,GAAG,MAAM5B,KAAK,CAACmB,OAAO,CAAC;IACrC,MAAMd,eAAe,CAACuB,QAAQ,CAACD,IAAI,CAAC;IACpCE,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;EACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEC,GAAG,CAAC;EAChE;AACF,CAAC;;AAED;AACA,eAAejB,QAAQ"},"metadata":{},"sourceType":"module"}