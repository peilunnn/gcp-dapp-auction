{"ast":null,"code":"var _jsxFileName = \"/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/components/ConnectWallet.jsx\",\n  _s = $RefreshSig$();\nimport Button from '@mui/material/Button';\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { styled } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTypography = styled(Typography)`\n  font-family: \"Google Sans\", sans-serif;\n  font-weight: 600;\n`;\nconst Injected = new InjectedConnector({\n  supportedChainIds: [1,\n  // Ethereum Mainnet\n  0x539 // Dev Network on localhost:8545 via Ganache\n  ]\n});\n\nconst ConnectWallet = () => {\n  _s();\n  const {\n    account,\n    chainId,\n    activate,\n    deactivate,\n    active\n  } = useWeb3React();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: active ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => deactivate(),\n      color: \"success\",\n      children: [\"\\u2705 Account \", account.slice(0, 5), \"... on chain \", chainId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => activate(Injected),\n      children: \"Connect to Metamask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectWallet, \"5BfYeWLaRWo7Y99VJLTdzWhrkR8=\", false, function () {\n  return [useWeb3React];\n});\n_c = ConnectWallet;\nexport default ConnectWallet;\nvar _c;\n$RefreshReg$(_c, \"ConnectWallet\");","map":{"version":3,"names":["Button","useWeb3React","InjectedConnector","styled","CustomTypography","Typography","Injected","supportedChainIds","ConnectWallet","account","chainId","activate","deactivate","active","slice"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/components/ConnectWallet.jsx"],"sourcesContent":["import Button from '@mui/material/Button';\nimport { useWeb3React } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { styled } from \"@mui/system\";\n\nconst CustomTypography = styled(Typography)`\n  font-family: \"Google Sans\", sans-serif;\n  font-weight: 600;\n`;\nconst Injected = new InjectedConnector({\n  supportedChainIds: [\n    1, // Ethereum Mainnet\n    0x539, // Dev Network on localhost:8545 via Ganache\n  ],\n});\n\nconst ConnectWallet = () => {\n  const { account, chainId, activate, deactivate, active } = useWeb3React();\n  return (\n    <div>\n      {active ? (\n        <Button variant=\"outlined\" onClick={() => deactivate()} color=\"success\">\n          âœ… Account {account.slice(0, 5)}... on chain {chainId}\n        </Button>\n      ) : (\n        <Button variant=\"contained\" onClick={() => activate(Injected)}>\n          Connect to Metamask\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ConnectWallet;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,MAAM,QAAQ,aAAa;AAAC;AAErC,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,UAAU,CAAE;AAC5C;AACA;AACA,CAAC;AACD,MAAMC,QAAQ,GAAG,IAAIJ,iBAAiB,CAAC;EACrCK,iBAAiB,EAAE,CACjB,CAAC;EAAE;EACH,KAAK,CAAE;EAAA;AAEX,CAAC,CAAC;;AAEF,MAAMC,aAAa,GAAG,MAAM;EAAA;EAC1B,MAAM;IAAEC,OAAO;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAGZ,YAAY,EAAE;EACzE,oBACE;IAAA,UACGY,MAAM,gBACL,QAAC,MAAM;MAAC,OAAO,EAAC,UAAU;MAAC,OAAO,EAAE,MAAMD,UAAU,EAAG;MAAC,KAAK,EAAC,SAAS;MAAA,8BAC1DH,OAAO,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,mBAAeJ,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7C,gBAET,QAAC,MAAM;MAAC,OAAO,EAAC,WAAW;MAAC,OAAO,EAAE,MAAMC,QAAQ,CAACL,QAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAG/D;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAfIE,aAAa;EAAA,QAC0CP,YAAY;AAAA;AAAA,KADnEO,aAAa;AAiBnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}