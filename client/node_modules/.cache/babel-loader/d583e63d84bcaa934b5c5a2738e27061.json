{"ast":null,"code":"/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Registry.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar Contract = require('web3-eth-contract');\nvar namehash = require('eth-ens-namehash');\nvar PromiEvent = require('web3-core-promievent');\nvar REGISTRY_ABI = require('../ressources/ABI/Registry');\nvar RESOLVER_ABI = require('../ressources/ABI/Resolver');\n\n/**\n * A wrapper around the ENS registry contract.\n *\n * @method Registry\n * @param {Ens} ens\n * @constructor\n */\nfunction Registry(ens) {\n  var self = this;\n  this.ens = ens;\n  this.contract = ens.checkNetwork().then(function (address) {\n    var contract = new Contract(REGISTRY_ABI, address);\n    contract.setProvider(self.ens.eth.currentProvider);\n    return contract;\n  });\n}\n\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method owner\n * @param {string} name\n * @param {function} callback\n * @return {Promise<any>}\n */\nRegistry.prototype.owner = function (name, callback) {\n  var promiEvent = new PromiEvent(true);\n  this.contract.then(function (contract) {\n    contract.methods.owner(namehash.hash(name)).call().then(function (receipt) {\n      promiEvent.resolve(receipt);\n      if (_.isFunction(callback)) {\n        callback(receipt);\n      }\n    }).catch(function (error) {\n      promiEvent.reject(error);\n      if (_.isFunction(callback)) {\n        callback(error);\n      }\n    });\n  });\n  return promiEvent.eventEmitter;\n};\n\n/**\n * Returns the resolver contract associated with a name.\n *\n * @method resolver\n * @param {string} name\n * @return {Promise<Contract>}\n */\nRegistry.prototype.resolver = function (name) {\n  var self = this;\n  return this.contract.then(function (contract) {\n    return contract.methods.resolver(namehash.hash(name)).call();\n  }).then(function (address) {\n    var contract = new Contract(RESOLVER_ABI, address);\n    contract.setProvider(self.ens.eth.currentProvider);\n    return contract;\n  });\n};\nmodule.exports = Registry;","map":{"version":3,"names":["_","require","Contract","namehash","PromiEvent","REGISTRY_ABI","RESOLVER_ABI","Registry","ens","self","contract","checkNetwork","then","address","setProvider","eth","currentProvider","prototype","owner","name","callback","promiEvent","methods","hash","call","receipt","resolve","isFunction","catch","error","reject","eventEmitter","resolver","module","exports"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-contract/node_modules/web3-eth-ens/src/contracts/Registry.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Registry.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar Contract = require('web3-eth-contract');\nvar namehash = require('eth-ens-namehash');\nvar PromiEvent = require('web3-core-promievent');\nvar REGISTRY_ABI = require('../ressources/ABI/Registry');\nvar RESOLVER_ABI = require('../ressources/ABI/Resolver');\n\n\n/**\n * A wrapper around the ENS registry contract.\n *\n * @method Registry\n * @param {Ens} ens\n * @constructor\n */\nfunction Registry(ens) {\n    var self = this;\n    this.ens = ens;\n    this.contract = ens.checkNetwork().then(function (address) {\n        var contract = new Contract(REGISTRY_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n\n        return contract;\n    });\n}\n\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method owner\n * @param {string} name\n * @param {function} callback\n * @return {Promise<any>}\n */\nRegistry.prototype.owner = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n\n    this.contract.then(function (contract) {\n        contract.methods.owner(namehash.hash(name)).call()\n            .then(function (receipt) {\n                promiEvent.resolve(receipt);\n\n                if (_.isFunction(callback)) {\n                    callback(receipt);\n                }\n            })\n            .catch(function (error) {\n                promiEvent.reject(error);\n\n                if (_.isFunction(callback)) {\n                    callback(error);\n                }\n            });\n    });\n\n    return promiEvent.eventEmitter;\n};\n\n/**\n * Returns the resolver contract associated with a name.\n *\n * @method resolver\n * @param {string} name\n * @return {Promise<Contract>}\n */\nRegistry.prototype.resolver = function (name) {\n    var self = this;\n\n    return this.contract.then(function (contract) {\n        return contract.methods.resolver(namehash.hash(name)).call();\n    }).then(function (address) {\n        var contract = new Contract(RESOLVER_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        return contract;\n    });\n};\n\nmodule.exports = Registry;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AAC7B,IAAIC,QAAQ,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC3C,IAAIE,QAAQ,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC1C,IAAIG,UAAU,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAChD,IAAII,YAAY,GAAGJ,OAAO,CAAC,4BAA4B,CAAC;AACxD,IAAIK,YAAY,GAAGL,OAAO,CAAC,4BAA4B,CAAC;;AAGxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,QAAQ,CAACC,GAAG,EAAE;EACnB,IAAIC,IAAI,GAAG,IAAI;EACf,IAAI,CAACD,GAAG,GAAGA,GAAG;EACd,IAAI,CAACE,QAAQ,GAAGF,GAAG,CAACG,YAAY,EAAE,CAACC,IAAI,CAAC,UAAUC,OAAO,EAAE;IACvD,IAAIH,QAAQ,GAAG,IAAIR,QAAQ,CAACG,YAAY,EAAEQ,OAAO,CAAC;IAClDH,QAAQ,CAACI,WAAW,CAACL,IAAI,CAACD,GAAG,CAACO,GAAG,CAACC,eAAe,CAAC;IAElD,OAAON,QAAQ;EACnB,CAAC,CAAC;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,QAAQ,CAACU,SAAS,CAACC,KAAK,GAAG,UAAUC,IAAI,EAAEC,QAAQ,EAAE;EACjD,IAAIC,UAAU,GAAG,IAAIjB,UAAU,CAAC,IAAI,CAAC;EAErC,IAAI,CAACM,QAAQ,CAACE,IAAI,CAAC,UAAUF,QAAQ,EAAE;IACnCA,QAAQ,CAACY,OAAO,CAACJ,KAAK,CAACf,QAAQ,CAACoB,IAAI,CAACJ,IAAI,CAAC,CAAC,CAACK,IAAI,EAAE,CAC7CZ,IAAI,CAAC,UAAUa,OAAO,EAAE;MACrBJ,UAAU,CAACK,OAAO,CAACD,OAAO,CAAC;MAE3B,IAAIzB,CAAC,CAAC2B,UAAU,CAACP,QAAQ,CAAC,EAAE;QACxBA,QAAQ,CAACK,OAAO,CAAC;MACrB;IACJ,CAAC,CAAC,CACDG,KAAK,CAAC,UAAUC,KAAK,EAAE;MACpBR,UAAU,CAACS,MAAM,CAACD,KAAK,CAAC;MAExB,IAAI7B,CAAC,CAAC2B,UAAU,CAACP,QAAQ,CAAC,EAAE;QACxBA,QAAQ,CAACS,KAAK,CAAC;MACnB;IACJ,CAAC,CAAC;EACV,CAAC,CAAC;EAEF,OAAOR,UAAU,CAACU,YAAY;AAClC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAxB,QAAQ,CAACU,SAAS,CAACe,QAAQ,GAAG,UAAUb,IAAI,EAAE;EAC1C,IAAIV,IAAI,GAAG,IAAI;EAEf,OAAO,IAAI,CAACC,QAAQ,CAACE,IAAI,CAAC,UAAUF,QAAQ,EAAE;IAC1C,OAAOA,QAAQ,CAACY,OAAO,CAACU,QAAQ,CAAC7B,QAAQ,CAACoB,IAAI,CAACJ,IAAI,CAAC,CAAC,CAACK,IAAI,EAAE;EAChE,CAAC,CAAC,CAACZ,IAAI,CAAC,UAAUC,OAAO,EAAE;IACvB,IAAIH,QAAQ,GAAG,IAAIR,QAAQ,CAACI,YAAY,EAAEO,OAAO,CAAC;IAClDH,QAAQ,CAACI,WAAW,CAACL,IAAI,CAACD,GAAG,CAACO,GAAG,CAACC,eAAe,CAAC;IAClD,OAAON,QAAQ;EACnB,CAAC,CAAC;AACN,CAAC;AAEDuB,MAAM,CAACC,OAAO,GAAG3B,QAAQ"},"metadata":{},"sourceType":"script"}