{"ast":null,"code":"var scryptsy = require('scryptsy');\nvar scrypt;\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nif (isNode) {\n  var NODE_MIN_VER_WITH_BUILTIN_SCRYPT = '10.5.0';\n  var NODE_MIN_VER_INCOMPAT_SCRYPT_PKG = '12.0.0';\n  var semver = require('semver');\n  var useNodeBuiltin = isNode && semver.Range('>=' + NODE_MIN_VER_WITH_BUILTIN_SCRYPT).test(process.version);\n  var tryScryptPkg = function () {\n    var scryptPkg;\n    return function () {\n      if (scryptPkg !== undefined) {\n        return scryptPkg;\n      }\n      try {\n        scryptPkg = function (m) {\n          return require(m);\n        }('scrypt');\n      } catch (e) {\n        if (/was compiled against a different/.test(e.message)) {\n          throw e;\n        }\n        scryptPkg = null;\n      }\n      return scryptPkg;\n    };\n  }();\n  var canImprove = function (nodeVer) {\n    return 'can improve web3\\'s peformance when running Node.js versions older than ' + nodeVer + ' by installing the (deprecated) scrypt package in your project';\n  };\n  if (useNodeBuiltin) {\n    var crypto = require('crypto');\n    var fallbackCount = 0;\n    scrypt = function (key, salt, N, r, p, dkLen) {\n      try {\n        return crypto.scryptSync(key, salt, dkLen, {\n          N: N,\n          r: r,\n          p: p\n        });\n      } catch (e) {\n        if (/scrypt:memory limit exceeded/.test(e.message)) {\n          var scryptPkg = tryScryptPkg();\n          if (scryptPkg) {\n            return scryptPkg.hashSync(key, {\n              N: N,\n              r: r,\n              p: p\n            }, dkLen, salt);\n          }\n          fallbackCount += 1;\n          console.warn('\\x1b[33m%s\\x1b[0m', 'Memory limit exceeded for Node\\'s built-in crypto.scrypt, falling back to scryptsy (times: ' + fallbackCount + '), if this happens frequently you ' + canImprove(NODE_MIN_VER_INCOMPAT_SCRYPT_PKG));\n          return scryptsy(key, salt, N, r, p, dkLen);\n        }\n        throw e;\n      }\n    };\n  } else {\n    var scryptPkg = tryScryptPkg();\n    if (scryptPkg) {\n      scrypt = function (key, salt, N, r, p, dkLen) {\n        return scryptPkg.hashSync(key, {\n          N: N,\n          r: r,\n          p: p\n        }, dkLen, salt);\n      };\n    } else {\n      console.warn('\\x1b[33m%s\\x1b[0m', 'You ' + canImprove(NODE_MIN_VER_WITH_BUILTIN_SCRYPT));\n    }\n  }\n}\nscrypt = scrypt || scryptsy;\nmodule.exports = scrypt;","map":{"version":3,"names":["scryptsy","require","scrypt","isNode","Object","prototype","toString","call","process","NODE_MIN_VER_WITH_BUILTIN_SCRYPT","NODE_MIN_VER_INCOMPAT_SCRYPT_PKG","semver","useNodeBuiltin","Range","test","version","tryScryptPkg","scryptPkg","undefined","m","e","message","canImprove","nodeVer","crypto","fallbackCount","key","salt","N","r","p","dkLen","scryptSync","hashSync","console","warn","module","exports"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-contract/node_modules/web3-eth-accounts/src/scrypt.js"],"sourcesContent":["var scryptsy = require('scryptsy');\n\nvar scrypt;\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nif (isNode) {\n    var NODE_MIN_VER_WITH_BUILTIN_SCRYPT = '10.5.0';\n    var NODE_MIN_VER_INCOMPAT_SCRYPT_PKG = '12.0.0';\n    var semver = require('semver');\n    var useNodeBuiltin = isNode && semver.Range('>=' + NODE_MIN_VER_WITH_BUILTIN_SCRYPT).test(process.version);\n\n    var tryScryptPkg = (function() {\n        var scryptPkg;\n        return function() {\n            if (scryptPkg !== undefined) { return scryptPkg; }\n            try {\n                scryptPkg = (function(m) { return require(m); })('scrypt');\n            } catch (e) {\n                if (/was compiled against a different/.test(e.message)) {\n                    throw e;\n                }\n                scryptPkg = null;\n            }\n            return scryptPkg;\n        };\n    })();\n\n    var canImprove = function(nodeVer) {\n        return 'can improve web3\\'s peformance when running Node.js versions older than ' + nodeVer + ' by installing the (deprecated) scrypt package in your project';\n    };\n\n    if (useNodeBuiltin) {\n        var crypto = require('crypto');\n        var fallbackCount = 0;\n        scrypt = function(key, salt, N, r, p, dkLen) {\n            try {\n                return crypto.scryptSync(key, salt, dkLen, {N: N, r: r, p: p});\n            } catch (e) {\n                if (/scrypt:memory limit exceeded/.test(e.message)) {\n                    var scryptPkg = tryScryptPkg();\n                    if (scryptPkg) {\n                        return scryptPkg.hashSync(key, {N: N, r: r, p: p}, dkLen, salt);\n                    }\n                    fallbackCount += 1;\n                    console.warn(\n                        '\\x1b[33m%s\\x1b[0m',\n                        'Memory limit exceeded for Node\\'s built-in crypto.scrypt, falling back to scryptsy (times: ' + fallbackCount + '), if this happens frequently you ' + canImprove(NODE_MIN_VER_INCOMPAT_SCRYPT_PKG)\n                    );\n                    return scryptsy(key, salt, N, r, p, dkLen);\n                }\n                throw e;\n            }\n        };\n    } else {\n        var scryptPkg = tryScryptPkg();\n        if (scryptPkg) {\n            scrypt = function(key, salt, N, r, p, dkLen) {\n                return scryptPkg.hashSync(key, {N: N, r: r, p: p}, dkLen, salt);\n            };\n        } else {\n            console.warn(\n                '\\x1b[33m%s\\x1b[0m',\n                'You ' + canImprove(NODE_MIN_VER_WITH_BUILTIN_SCRYPT)\n            );\n        }\n    }\n}\n\nscrypt = scrypt || scryptsy;\n\nmodule.exports = scrypt;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}