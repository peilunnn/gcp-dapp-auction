{"ast":null,"code":"var BN = require(\"bn.js\");\nvar Bytes = require(\"./bytes\");\nvar fromBN = function fromBN(bn) {\n  return \"0x\" + bn.toString(\"hex\");\n};\nvar toBN = function toBN(str) {\n  return new BN(str.slice(2), 16);\n};\nvar fromString = function fromString(str) {\n  var bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\nvar toEther = function toEther(wei) {\n  return toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n};\nvar fromEther = function fromEther(eth) {\n  return mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n};\nvar toString = function toString(a) {\n  return toBN(a).toString(10);\n};\nvar fromNumber = function fromNumber(a) {\n  return typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n};\nvar toNumber = function toNumber(a) {\n  return toBN(a).toNumber();\n};\nvar toUint256 = function toUint256(a) {\n  return Bytes.pad(32, a);\n};\nvar bin = function bin(method) {\n  return function (a, b) {\n    return fromBN(toBN(a)[method](toBN(b)));\n  };\n};\nvar add = bin(\"add\");\nvar mul = bin(\"mul\");\nvar div = bin(\"div\");\nvar sub = bin(\"sub\");\nmodule.exports = {\n  toString: toString,\n  fromString: fromString,\n  toNumber: toNumber,\n  fromNumber: fromNumber,\n  toEther: toEther,\n  fromEther: fromEther,\n  toUint256: toUint256,\n  add: add,\n  mul: mul,\n  div: div,\n  sub: sub\n};","map":{"version":3,"names":["BN","require","Bytes","fromBN","bn","toString","toBN","str","slice","fromString","toEther","wei","toNumber","div","fromEther","eth","mul","fromNumber","Math","floor","a","test","toUint256","pad","bin","method","b","add","sub","module","exports"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/web3-eth-accounts/node_modules/eth-lib/lib/nat.js"],"sourcesContent":["var BN = require(\"bn.js\");\nvar Bytes = require(\"./bytes\");\n\nvar fromBN = function fromBN(bn) {\n  return \"0x\" + bn.toString(\"hex\");\n};\n\nvar toBN = function toBN(str) {\n  return new BN(str.slice(2), 16);\n};\n\nvar fromString = function fromString(str) {\n  var bn = \"0x\" + (str.slice(0, 2) === \"0x\" ? new BN(str.slice(2), 16) : new BN(str, 10)).toString(\"hex\");\n  return bn === \"0x0\" ? \"0x\" : bn;\n};\n\nvar toEther = function toEther(wei) {\n  return toNumber(div(wei, fromString(\"10000000000\"))) / 100000000;\n};\n\nvar fromEther = function fromEther(eth) {\n  return mul(fromNumber(Math.floor(eth * 100000000)), fromString(\"10000000000\"));\n};\n\nvar toString = function toString(a) {\n  return toBN(a).toString(10);\n};\n\nvar fromNumber = function fromNumber(a) {\n  return typeof a === \"string\" ? /^0x/.test(a) ? a : \"0x\" + a : \"0x\" + new BN(a).toString(\"hex\");\n};\n\nvar toNumber = function toNumber(a) {\n  return toBN(a).toNumber();\n};\n\nvar toUint256 = function toUint256(a) {\n  return Bytes.pad(32, a);\n};\n\nvar bin = function bin(method) {\n  return function (a, b) {\n    return fromBN(toBN(a)[method](toBN(b)));\n  };\n};\n\nvar add = bin(\"add\");\nvar mul = bin(\"mul\");\nvar div = bin(\"div\");\nvar sub = bin(\"sub\");\n\nmodule.exports = {\n  toString: toString,\n  fromString: fromString,\n  toNumber: toNumber,\n  fromNumber: fromNumber,\n  toEther: toEther,\n  fromEther: fromEther,\n  toUint256: toUint256,\n  add: add,\n  mul: mul,\n  div: div,\n  sub: sub\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}