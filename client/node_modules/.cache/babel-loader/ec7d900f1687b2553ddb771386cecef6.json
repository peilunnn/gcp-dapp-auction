{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  var Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  var contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Subscription = require('web3-core-subscriptions').subscription;\nvar formatters = require('web3-core-helpers').formatters;\nvar errors = require('web3-core-helpers').errors;\nvar promiEvent = require('web3-core-promievent');\nvar abi = require('web3-eth-abi');\n\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\nvar Contract = function Contract(jsonInterface, address, options) {\n  var _this = this,\n    args = Array.prototype.slice.call(arguments);\n  if (!(this instanceof Contract)) {\n    throw new Error('Please use the \"new\" keyword to instantiate a web3.eth.contract() object!');\n  }\n\n  // sets _requestmanager\n  core.packageInit(this, [this.constructor.currentProvider]);\n  this.clearSubscriptions = this._requestManager.clearSubscriptions;\n  if (!jsonInterface || !Array.isArray(jsonInterface)) {\n    throw new Error('You must provide the json interface of the contract when instantiating a contract object.');\n  }\n\n  // create the options object\n  this.options = {};\n  var lastArg = args[args.length - 1];\n  if (_.isObject(lastArg) && !_.isArray(lastArg)) {\n    options = lastArg;\n    this.options = _.extend(this.options, this._getOrSetDefaultOptions(options));\n    if (_.isObject(address)) {\n      address = null;\n    }\n  }\n\n  // set address\n  Object.defineProperty(this.options, 'address', {\n    set: function (value) {\n      if (value) {\n        _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n      }\n    },\n    get: function () {\n      return _this._address;\n    },\n    enumerable: true\n  });\n\n  // add method and event signatures, when the jsonInterface gets set\n  Object.defineProperty(this.options, 'jsonInterface', {\n    set: function (value) {\n      _this.methods = {};\n      _this.events = {};\n      _this._jsonInterface = value.map(function (method) {\n        var func, funcName;\n\n        // make constant and payable backwards compatible\n        method.constant = method.stateMutability === \"view\" || method.stateMutability === \"pure\" || method.constant;\n        method.payable = method.stateMutability === \"payable\" || method.payable;\n        if (method.name) {\n          funcName = utils._jsonInterfaceMethodToString(method);\n        }\n\n        // function\n        if (method.type === 'function') {\n          method.signature = abi.encodeFunctionSignature(funcName);\n          func = _this._createTxObject.bind({\n            method: method,\n            parent: _this\n          });\n\n          // add method only if not one already exists\n          if (!_this.methods[method.name]) {\n            _this.methods[method.name] = func;\n          } else {\n            var cascadeFunc = _this._createTxObject.bind({\n              method: method,\n              parent: _this,\n              nextMethod: _this.methods[method.name]\n            });\n            _this.methods[method.name] = cascadeFunc;\n          }\n\n          // definitely add the method based on its signature\n          _this.methods[method.signature] = func;\n\n          // add method by name\n          _this.methods[funcName] = func;\n\n          // event\n        } else if (method.type === 'event') {\n          method.signature = abi.encodeEventSignature(funcName);\n          var event = _this._on.bind(_this, method.signature);\n\n          // add method only if not already exists\n          if (!_this.events[method.name] || _this.events[method.name].name === 'bound ') _this.events[method.name] = event;\n\n          // definitely add the method based on its signature\n          _this.events[method.signature] = event;\n\n          // add event by name\n          _this.events[funcName] = event;\n        }\n        return method;\n      });\n\n      // add allEvents\n      _this.events.allEvents = _this._on.bind(_this, 'allevents');\n      return _this._jsonInterface;\n    },\n    get: function () {\n      return _this._jsonInterface;\n    },\n    enumerable: true\n  });\n\n  // get default account from the Class\n  var defaultAccount = this.constructor.defaultAccount;\n  var defaultBlock = this.constructor.defaultBlock || 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      }\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val;\n      return val;\n    },\n    enumerable: true\n  });\n\n  // properties\n  this.methods = {};\n  this.events = {};\n  this._address = null;\n  this._jsonInterface = [];\n\n  // set getter/setter properties\n  this.options.address = address;\n  this.options.jsonInterface = jsonInterface;\n};\nContract.setProvider = function (provider, accounts) {\n  // Contract.currentProvider = provider;\n  core.packageInit(this, [provider]);\n  this._ethAccounts = accounts;\n};\n\n/**\n * Get the callback and modiufy the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\nContract.prototype._getCallback = function getCallback(args) {\n  if (args && _.isFunction(args[args.length - 1])) {\n    return args.pop(); // modify the args array!\n  }\n};\n\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\nContract.prototype._checkListener = function (type, event) {\n  if (event === type) {\n    throw new Error('The event \"' + type + '\" is a reserved event name, you can\\'t use it.');\n  }\n};\n\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n  var gasPrice = options.gasPrice ? String(options.gasPrice) : null;\n  var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\n  options.data = options.data || this.options.data;\n  options.from = from || this.options.from;\n  options.gasPrice = gasPrice || this.options.gasPrice;\n  options.gas = options.gas || options.gasLimit || this.options.gas;\n\n  // TODO replace with only gasLimit?\n  delete options.gasLimit;\n  return options;\n};\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nContract.prototype._encodeEventABI = function (event, options) {\n  options = options || {};\n  var filter = options.filter || {},\n    result = {};\n  ['fromBlock', 'toBlock'].filter(function (f) {\n    return options[f] !== undefined;\n  }).forEach(function (f) {\n    result[f] = formatters.inputBlockNumberFormatter(options[f]);\n  });\n\n  // use given topics\n  if (_.isArray(options.topics)) {\n    result.topics = options.topics;\n\n    // create topics based on filter\n  } else {\n    result.topics = [];\n\n    // add event signature\n    if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n      result.topics.push(event.signature);\n    }\n\n    // add event topics (indexed arguments)\n    if (event.name !== 'ALLEVENTS') {\n      var indexedTopics = event.inputs.filter(function (i) {\n        return i.indexed === true;\n      }).map(function (i) {\n        var value = filter[i.name];\n        if (!value) {\n          return null;\n        }\n\n        // TODO: https://github.com/ethereum/web3.js/issues/344\n        // TODO: deal properly with components\n\n        if (_.isArray(value)) {\n          return value.map(function (v) {\n            return abi.encodeParameter(i.type, v);\n          });\n        }\n        return abi.encodeParameter(i.type, value);\n      });\n      result.topics = result.topics.concat(indexedTopics);\n    }\n    if (!result.topics.length) delete result.topics;\n  }\n  if (this.options.address) {\n    result.address = this.options.address.toLowerCase();\n  }\n  return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nContract.prototype._decodeEventABI = function (data) {\n  var event = this;\n  data.data = data.data || '';\n  data.topics = data.topics || [];\n  var result = formatters.outputLogFormatter(data);\n\n  // if allEvents get the right event\n  if (event.name === 'ALLEVENTS') {\n    event = event.jsonInterface.find(function (intf) {\n      return intf.signature === data.topics[0];\n    }) || {\n      anonymous: true\n    };\n  }\n\n  // create empty inputs if none are present (e.g. anonymous events on allEvents)\n  event.inputs = event.inputs || [];\n  var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\n  result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\n  delete result.returnValues.__length__;\n\n  // add name\n  result.event = event.name;\n\n  // add signature\n  result.signature = event.anonymous || !data.topics[0] ? null : data.topics[0];\n\n  // move the data and topics to \"raw\"\n  result.raw = {\n    data: result.data,\n    topics: result.topics\n  };\n  delete result.data;\n  delete result.topics;\n  return result;\n};\n\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n  var methodSignature = this._method.signature,\n    args = this.arguments || [];\n  var signature = false,\n    paramsABI = this._parent.options.jsonInterface.filter(function (json) {\n      return methodSignature === 'constructor' && json.type === methodSignature || (json.signature === methodSignature || json.signature === methodSignature.replace('0x', '') || json.name === methodSignature) && json.type === 'function';\n    }).map(function (json) {\n      var inputLength = _.isArray(json.inputs) ? json.inputs.length : 0;\n      if (inputLength !== args.length) {\n        throw new Error('The number of arguments is not matching the methods required number. You need to pass ' + inputLength + ' arguments.');\n      }\n      if (json.type === 'function') {\n        signature = json.signature;\n      }\n      return _.isArray(json.inputs) ? json.inputs : [];\n    }).map(function (inputs) {\n      return abi.encodeParameters(inputs, args).replace('0x', '');\n    })[0] || '';\n\n  // return constructor\n  if (methodSignature === 'constructor') {\n    if (!this._deployData) throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n    return this._deployData + paramsABI;\n\n    // return method\n  } else {\n    var returnValue = signature ? signature + paramsABI : paramsABI;\n    if (!returnValue) {\n      throw new Error('Couldn\\'t find a matching contract method named \"' + this._method.name + '\".');\n    } else {\n      return returnValue;\n    }\n  }\n};\n\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\n  if (!returnValues) {\n    return null;\n  }\n  returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n  var result = abi.decodeParameters(outputs, returnValues);\n  if (result.__length__ === 1) {\n    return result[0];\n  } else {\n    delete result.__length__;\n    return result;\n  }\n};\n\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\nContract.prototype.deploy = function (options, callback) {\n  options = options || {};\n  options.arguments = options.arguments || [];\n  options = this._getOrSetDefaultOptions(options);\n\n  // return error, if no \"data\" is specified\n  if (!options.data) {\n    return utils._fireError(new Error('No \"data\" specified in neither the given options, nor the default options.'), null, null, callback);\n  }\n  var constructor = _.find(this.options.jsonInterface, function (method) {\n    return method.type === 'constructor';\n  }) || {};\n  constructor.signature = 'constructor';\n  return this._createTxObject.apply({\n    method: constructor,\n    parent: this,\n    deployData: options.data,\n    _ethAccounts: this.constructor._ethAccounts\n  }, options.arguments);\n};\n\n/**\n * Gets the event signature and outputformatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\nContract.prototype._generateEventOptions = function () {\n  var args = Array.prototype.slice.call(arguments);\n\n  // get the callback\n  var callback = this._getCallback(args);\n\n  // get the options\n  var options = _.isObject(args[args.length - 1]) ? args.pop() : {};\n  var event = _.isString(args[0]) ? args[0] : 'allevents';\n  event = event.toLowerCase() === 'allevents' ? {\n    name: 'ALLEVENTS',\n    jsonInterface: this.options.jsonInterface\n  } : this.options.jsonInterface.find(function (json) {\n    return json.type === 'event' && (json.name === event || json.signature === '0x' + event.replace('0x', ''));\n  });\n  if (!event) {\n    throw new Error('Event \"' + event.name + '\" doesn\\'t exist in this contract.');\n  }\n  if (!utils.isAddress(this.options.address)) {\n    throw new Error('This contract object doesn\\'t have address set yet, please set an address first.');\n  }\n  return {\n    params: this._encodeEventABI(event, options),\n    event: event,\n    callback: callback\n  };\n};\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\nContract.prototype.clone = function () {\n  return new this.constructor(this.options.jsonInterface, this.options.address, this.options);\n};\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype.once = function (event, options, callback) {\n  var args = Array.prototype.slice.call(arguments);\n\n  // get the callback\n  callback = this._getCallback(args);\n  if (!callback) {\n    throw new Error('Once requires a callback as the second parameter.');\n  }\n\n  // don't allow fromBlock\n  if (options) delete options.fromBlock;\n\n  // don't return as once shouldn't provide \"on\"\n  this._on(event, options, function (err, res, sub) {\n    sub.unsubscribe();\n    if (_.isFunction(callback)) {\n      callback(err, res, sub);\n    }\n  });\n  return undefined;\n};\n\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype._on = function () {\n  var subOptions = this._generateEventOptions.apply(this, arguments);\n\n  // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n  this._checkListener('newListener', subOptions.event.name, subOptions.callback);\n  this._checkListener('removeListener', subOptions.event.name, subOptions.callback);\n\n  // TODO check if listener already exists? and reuse subscription if options are the same.\n\n  // create new subscription\n  var subscription = new Subscription({\n    subscription: {\n      params: 1,\n      inputFormatter: [formatters.inputLogFormatter],\n      outputFormatter: this._decodeEventABI.bind(subOptions.event),\n      // DUBLICATE, also in web3-eth\n      subscriptionHandler: function (output) {\n        if (output.removed) {\n          this.emit('changed', output);\n        } else {\n          this.emit('data', output);\n        }\n        if (_.isFunction(this.callback)) {\n          this.callback(null, output, this);\n        }\n      }\n    },\n    type: 'eth',\n    requestManager: this._requestManager\n  });\n  subscription.subscribe('logs', subOptions.params, subOptions.callback || function () {});\n  return subscription;\n};\n\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\nContract.prototype.getPastEvents = function () {\n  var subOptions = this._generateEventOptions.apply(this, arguments);\n  var getPastLogs = new Method({\n    name: 'getPastLogs',\n    call: 'eth_getLogs',\n    params: 1,\n    inputFormatter: [formatters.inputLogFormatter],\n    outputFormatter: this._decodeEventABI.bind(subOptions.event)\n  });\n  getPastLogs.setRequestManager(this._requestManager);\n  var call = getPastLogs.buildCall();\n  getPastLogs = null;\n  return call(subOptions.params, subOptions.callback);\n};\n\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\nContract.prototype._createTxObject = function _createTxObject() {\n  var args = Array.prototype.slice.call(arguments);\n  var txObject = {};\n  if (this.method.type === 'function') {\n    txObject.call = this.parent._executeMethod.bind(txObject, 'call');\n    txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true); // to make batch requests\n  }\n\n  txObject.send = this.parent._executeMethod.bind(txObject, 'send');\n  txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true); // to make batch requests\n  txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\n  txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate');\n  if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n    if (this.nextMethod) {\n      return this.nextMethod.apply(null, args);\n    }\n    throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\n  }\n  txObject.arguments = args || [];\n  txObject._method = this.method;\n  txObject._parent = this.parent;\n  txObject._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts;\n  if (this.deployData) {\n    txObject._deployData = this.deployData;\n  }\n  return txObject;\n};\n\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n  var processedArgs = {};\n  processedArgs.type = args.shift();\n\n  // get the callback\n  processedArgs.callback = this._parent._getCallback(args);\n\n  // get block number to use for call\n  if (processedArgs.type === 'call' && args[args.length - 1] !== true && (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1]))) processedArgs.defaultBlock = args.pop();\n\n  // get the options\n  processedArgs.options = _.isObject(args[args.length - 1]) ? args.pop() : {};\n\n  // get the generateRequest argument for batch requests\n  processedArgs.generateRequest = args[args.length - 1] === true ? args.pop() : false;\n  processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\n  processedArgs.options.data = this.encodeABI();\n\n  // add contract address\n  if (!this._deployData && !utils.isAddress(this._parent.options.address)) throw new Error('This contract object doesn\\'t have address set yet, please set an address first.');\n  if (!this._deployData) processedArgs.options.to = this._parent.options.address;\n\n  // return error, if no \"data\" is specified\n  if (!processedArgs.options.data) return utils._fireError(new Error('Couldn\\'t find a matching contract method, or the number of parameters is wrong.'), defer.eventEmitter, defer.reject, processedArgs.callback);\n  return processedArgs;\n};\n\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\nContract.prototype._executeMethod = function _executeMethod() {\n  var _this = this,\n    args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer),\n    defer = promiEvent(args.type !== 'send'),\n    ethAccounts = _this.constructor._ethAccounts || _this._ethAccounts;\n\n  // simple return request for batch requests\n  if (args.generateRequest) {\n    var payload = {\n      params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n      callback: args.callback\n    };\n    if (args.type === 'call') {\n      payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\n      payload.method = 'eth_call';\n      payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\n    } else {\n      payload.method = 'eth_sendTransaction';\n    }\n    return payload;\n  } else {\n    switch (args.type) {\n      case 'estimate':\n        var estimateGas = new Method({\n          name: 'estimateGas',\n          call: 'eth_estimateGas',\n          params: 1,\n          inputFormatter: [formatters.inputCallFormatter],\n          outputFormatter: utils.hexToNumber,\n          requestManager: _this._parent._requestManager,\n          accounts: ethAccounts,\n          // is eth.accounts (necessary for wallet signing)\n          defaultAccount: _this._parent.defaultAccount,\n          defaultBlock: _this._parent.defaultBlock\n        }).createFunction();\n        return estimateGas(args.options, args.callback);\n      case 'call':\n        // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n\n        var call = new Method({\n          name: 'call',\n          call: 'eth_call',\n          params: 2,\n          inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n          // add output formatter for decoding\n          outputFormatter: function (result) {\n            return _this._parent._decodeMethodReturn(_this._method.outputs, result);\n          },\n          requestManager: _this._parent._requestManager,\n          accounts: ethAccounts,\n          // is eth.accounts (necessary for wallet signing)\n          defaultAccount: _this._parent.defaultAccount,\n          defaultBlock: _this._parent.defaultBlock\n        }).createFunction();\n        return call(args.options, args.defaultBlock, args.callback);\n      case 'send':\n        // return error, if no \"from\" is specified\n        if (!utils.isAddress(args.options.from)) {\n          return utils._fireError(new Error('No \"from\" address specified in neither the given options, nor the default options.'), defer.eventEmitter, defer.reject, args.callback);\n        }\n        if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\n          return utils._fireError(new Error('Can not send value to non-payable contract method or constructor'), defer.eventEmitter, defer.reject, args.callback);\n        }\n\n        // make sure receipt logs are decoded\n        var extraFormatters = {\n          receiptFormatter: function (receipt) {\n            if (_.isArray(receipt.logs)) {\n              // decode logs\n              var events = _.map(receipt.logs, function (log) {\n                return _this._parent._decodeEventABI.call({\n                  name: 'ALLEVENTS',\n                  jsonInterface: _this._parent.options.jsonInterface\n                }, log);\n              });\n\n              // make log names keys\n              receipt.events = {};\n              var count = 0;\n              events.forEach(function (ev) {\n                if (ev.event) {\n                  // if > 1 of the same event, don't overwrite any existing events\n                  if (receipt.events[ev.event]) {\n                    if (Array.isArray(receipt.events[ev.event])) {\n                      receipt.events[ev.event].push(ev);\n                    } else {\n                      receipt.events[ev.event] = [receipt.events[ev.event], ev];\n                    }\n                  } else {\n                    receipt.events[ev.event] = ev;\n                  }\n                } else {\n                  receipt.events[count] = ev;\n                  count++;\n                }\n              });\n              delete receipt.logs;\n            }\n            return receipt;\n          },\n          contractDeployFormatter: function (receipt) {\n            var newContract = _this._parent.clone();\n            newContract.options.address = receipt.contractAddress;\n            return newContract;\n          }\n        };\n        var sendTransaction = new Method({\n          name: 'sendTransaction',\n          call: 'eth_sendTransaction',\n          params: 1,\n          inputFormatter: [formatters.inputTransactionFormatter],\n          requestManager: _this._parent._requestManager,\n          accounts: _this.constructor._ethAccounts || _this._ethAccounts,\n          // is eth.accounts (necessary for wallet signing)\n          defaultAccount: _this._parent.defaultAccount,\n          defaultBlock: _this._parent.defaultBlock,\n          extraFormatters: extraFormatters\n        }).createFunction();\n        return sendTransaction(args.options, args.callback);\n    }\n  }\n};\nmodule.exports = Contract;","map":{"version":3,"names":["_","require","core","Method","utils","Subscription","subscription","formatters","errors","promiEvent","abi","Contract","jsonInterface","address","options","_this","args","Array","prototype","slice","call","arguments","Error","packageInit","constructor","currentProvider","clearSubscriptions","_requestManager","isArray","lastArg","length","isObject","extend","_getOrSetDefaultOptions","Object","defineProperty","set","value","_address","toChecksumAddress","inputAddressFormatter","get","enumerable","methods","events","_jsonInterface","map","method","func","funcName","constant","stateMutability","payable","name","_jsonInterfaceMethodToString","type","signature","encodeFunctionSignature","_createTxObject","bind","parent","cascadeFunc","nextMethod","encodeEventSignature","event","_on","allEvents","defaultAccount","defaultBlock","val","setProvider","provider","accounts","_ethAccounts","_getCallback","getCallback","isFunction","pop","_checkListener","getOrSetDefaultOptions","gasPrice","String","from","data","gas","gasLimit","_encodeEventABI","filter","result","f","undefined","forEach","inputBlockNumberFormatter","topics","anonymous","push","indexedTopics","inputs","i","indexed","v","encodeParameter","concat","toLowerCase","_decodeEventABI","outputLogFormatter","find","intf","argTopics","returnValues","decodeLog","__length__","raw","_encodeMethodABI","methodSignature","_method","paramsABI","_parent","json","replace","inputLength","encodeParameters","_deployData","returnValue","_decodeMethodReturn","outputs","decodeParameters","deploy","callback","_fireError","apply","deployData","_generateEventOptions","isString","isAddress","params","clone","once","fromBlock","err","res","sub","unsubscribe","subOptions","inputFormatter","inputLogFormatter","outputFormatter","subscriptionHandler","output","removed","emit","requestManager","subscribe","getPastEvents","getPastLogs","setRequestManager","buildCall","txObject","_executeMethod","request","send","encodeABI","estimateGas","InvalidNumberOfParams","_processExecuteArguments","defer","processedArgs","shift","isFinite","generateRequest","to","eventEmitter","reject","ethAccounts","payload","inputCallFormatter","inputDefaultBlockNumberFormatter","format","hexToNumber","createFunction","isBoolean","extraFormatters","receiptFormatter","receipt","logs","log","count","ev","contractDeployFormatter","newContract","contractAddress","sendTransaction","inputTransactionFormatter","module","exports"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/web3-eth-contract/src/index.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract.js\n *\n * To initialize a contract use:\n *\n *  var Contract = require('web3-eth-contract');\n *  Contract.setProvider('ws://localhost:8546');\n *  var contract = new Contract(abi, address, ...);\n *\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\n\"use strict\";\n\n\nvar _ = require('underscore');\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Subscription = require('web3-core-subscriptions').subscription;\nvar formatters = require('web3-core-helpers').formatters;\nvar errors = require('web3-core-helpers').errors;\nvar promiEvent = require('web3-core-promievent');\nvar abi = require('web3-eth-abi');\n\n\n/**\n * Should be called to create new contract instance\n *\n * @method Contract\n * @constructor\n * @param {Array} jsonInterface\n * @param {String} address\n * @param {Object} options\n */\nvar Contract = function Contract(jsonInterface, address, options) {\n    var _this = this,\n        args = Array.prototype.slice.call(arguments);\n\n    if(!(this instanceof Contract)) {\n        throw new Error('Please use the \"new\" keyword to instantiate a web3.eth.contract() object!');\n    }\n\n    // sets _requestmanager\n    core.packageInit(this, [this.constructor.currentProvider]);\n\n    this.clearSubscriptions = this._requestManager.clearSubscriptions;\n\n\n\n    if(!jsonInterface || !(Array.isArray(jsonInterface))) {\n        throw new Error('You must provide the json interface of the contract when instantiating a contract object.');\n    }\n\n\n\n    // create the options object\n    this.options = {};\n\n    var lastArg = args[args.length - 1];\n    if(_.isObject(lastArg) && !_.isArray(lastArg)) {\n        options = lastArg;\n\n        this.options = _.extend(this.options, this._getOrSetDefaultOptions(options));\n        if(_.isObject(address)) {\n            address = null;\n        }\n    }\n\n    // set address\n    Object.defineProperty(this.options, 'address', {\n        set: function(value){\n            if(value) {\n                _this._address = utils.toChecksumAddress(formatters.inputAddressFormatter(value));\n            }\n        },\n        get: function(){\n            return _this._address;\n        },\n        enumerable: true\n    });\n\n    // add method and event signatures, when the jsonInterface gets set\n    Object.defineProperty(this.options, 'jsonInterface', {\n        set: function(value){\n            _this.methods = {};\n            _this.events = {};\n\n            _this._jsonInterface = value.map(function(method) {\n                var func,\n                    funcName;\n\n                // make constant and payable backwards compatible\n                method.constant = (method.stateMutability === \"view\" || method.stateMutability === \"pure\" || method.constant);\n                method.payable = (method.stateMutability === \"payable\" || method.payable);\n\n\n                if (method.name) {\n                    funcName = utils._jsonInterfaceMethodToString(method);\n                }\n\n\n                // function\n                if (method.type === 'function') {\n                    method.signature = abi.encodeFunctionSignature(funcName);\n                    func = _this._createTxObject.bind({\n                        method: method,\n                        parent: _this\n                    });\n\n\n                    // add method only if not one already exists\n                    if(!_this.methods[method.name]) {\n                        _this.methods[method.name] = func;\n                    } else {\n                        var cascadeFunc = _this._createTxObject.bind({\n                            method: method,\n                            parent: _this,\n                            nextMethod: _this.methods[method.name]\n                        });\n                        _this.methods[method.name] = cascadeFunc;\n                    }\n\n                    // definitely add the method based on its signature\n                    _this.methods[method.signature] = func;\n\n                    // add method by name\n                    _this.methods[funcName] = func;\n\n\n                // event\n                } else if (method.type === 'event') {\n                    method.signature = abi.encodeEventSignature(funcName);\n                    var event = _this._on.bind(_this, method.signature);\n\n                    // add method only if not already exists\n                    if(!_this.events[method.name] || _this.events[method.name].name === 'bound ')\n                        _this.events[method.name] = event;\n\n                    // definitely add the method based on its signature\n                    _this.events[method.signature] = event;\n\n                    // add event by name\n                    _this.events[funcName] = event;\n                }\n\n\n                return method;\n            });\n\n            // add allEvents\n            _this.events.allEvents = _this._on.bind(_this, 'allevents');\n\n            return _this._jsonInterface;\n        },\n        get: function(){\n            return _this._jsonInterface;\n        },\n        enumerable: true\n    });\n\n    // get default account from the Class\n    var defaultAccount = this.constructor.defaultAccount;\n    var defaultBlock = this.constructor.defaultBlock || 'latest';\n\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if(val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n            }\n\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n\n            return val;\n        },\n        enumerable: true\n    });\n\n    // properties\n    this.methods = {};\n    this.events = {};\n\n    this._address = null;\n    this._jsonInterface = [];\n\n    // set getter/setter properties\n    this.options.address = address;\n    this.options.jsonInterface = jsonInterface;\n\n};\n\nContract.setProvider = function(provider, accounts) {\n    // Contract.currentProvider = provider;\n    core.packageInit(this, [provider]);\n\n    this._ethAccounts = accounts;\n};\n\n\n/**\n * Get the callback and modiufy the array if necessary\n *\n * @method _getCallback\n * @param {Array} args\n * @return {Function} the callback\n */\nContract.prototype._getCallback = function getCallback(args) {\n    if (args && _.isFunction(args[args.length - 1])) {\n        return args.pop(); // modify the args array!\n    }\n};\n\n/**\n * Checks that no listener with name \"newListener\" or \"removeListener\" is added.\n *\n * @method _checkListener\n * @param {String} type\n * @param {String} event\n * @return {Object} the contract instance\n */\nContract.prototype._checkListener = function(type, event){\n    if(event === type) {\n        throw new Error('The event \"'+ type +'\" is a reserved event name, you can\\'t use it.');\n    }\n};\n\n\n/**\n * Use default values, if options are not available\n *\n * @method _getOrSetDefaultOptions\n * @param {Object} options the options gived by the user\n * @return {Object} the options with gaps filled by defaults\n */\nContract.prototype._getOrSetDefaultOptions = function getOrSetDefaultOptions(options) {\n    var gasPrice = options.gasPrice ? String(options.gasPrice): null;\n    var from = options.from ? utils.toChecksumAddress(formatters.inputAddressFormatter(options.from)) : null;\n\n    options.data = options.data || this.options.data;\n\n    options.from = from || this.options.from;\n    options.gasPrice = gasPrice || this.options.gasPrice;\n    options.gas = options.gas || options.gasLimit || this.options.gas;\n\n    // TODO replace with only gasLimit?\n    delete options.gasLimit;\n\n    return options;\n};\n\n\n/**\n * Should be used to encode indexed params and options to one final object\n *\n * @method _encodeEventABI\n * @param {Object} event\n * @param {Object} options\n * @return {Object} everything combined together and encoded\n */\nContract.prototype._encodeEventABI = function (event, options) {\n    options = options || {};\n    var filter = options.filter || {},\n        result = {};\n\n    ['fromBlock', 'toBlock'].filter(function (f) {\n        return options[f] !== undefined;\n    }).forEach(function (f) {\n        result[f] = formatters.inputBlockNumberFormatter(options[f]);\n    });\n\n    // use given topics\n    if(_.isArray(options.topics)) {\n        result.topics = options.topics;\n\n    // create topics based on filter\n    } else {\n\n        result.topics = [];\n\n        // add event signature\n        if (event && !event.anonymous && event.name !== 'ALLEVENTS') {\n            result.topics.push(event.signature);\n        }\n\n        // add event topics (indexed arguments)\n        if (event.name !== 'ALLEVENTS') {\n            var indexedTopics = event.inputs.filter(function (i) {\n                return i.indexed === true;\n            }).map(function (i) {\n                var value = filter[i.name];\n                if (!value) {\n                    return null;\n                }\n\n                // TODO: https://github.com/ethereum/web3.js/issues/344\n                // TODO: deal properly with components\n\n                if (_.isArray(value)) {\n                    return value.map(function (v) {\n                        return abi.encodeParameter(i.type, v);\n                    });\n                }\n                return abi.encodeParameter(i.type, value);\n            });\n\n            result.topics = result.topics.concat(indexedTopics);\n        }\n\n        if(!result.topics.length)\n            delete result.topics;\n    }\n\n    if(this.options.address) {\n        result.address = this.options.address.toLowerCase();\n    }\n\n    return result;\n};\n\n/**\n * Should be used to decode indexed params and options\n *\n * @method _decodeEventABI\n * @param {Object} data\n * @return {Object} result object with decoded indexed && not indexed params\n */\nContract.prototype._decodeEventABI = function (data) {\n    var event = this;\n\n    data.data = data.data || '';\n    data.topics = data.topics || [];\n    var result = formatters.outputLogFormatter(data);\n\n    // if allEvents get the right event\n    if(event.name === 'ALLEVENTS') {\n        event = event.jsonInterface.find(function (intf) {\n            return (intf.signature === data.topics[0]);\n        }) || {anonymous: true};\n    }\n\n    // create empty inputs if none are present (e.g. anonymous events on allEvents)\n    event.inputs = event.inputs || [];\n\n\n    var argTopics = event.anonymous ? data.topics : data.topics.slice(1);\n\n    result.returnValues = abi.decodeLog(event.inputs, data.data, argTopics);\n    delete result.returnValues.__length__;\n\n    // add name\n    result.event = event.name;\n\n    // add signature\n    result.signature = (event.anonymous || !data.topics[0]) ? null : data.topics[0];\n\n    // move the data and topics to \"raw\"\n    result.raw = {\n        data: result.data,\n        topics: result.topics\n    };\n    delete result.data;\n    delete result.topics;\n\n\n    return result;\n};\n\n/**\n * Encodes an ABI for a method, including signature or the method.\n * Or when constructor encodes only the constructor parameters.\n *\n * @method _encodeMethodABI\n * @param {Mixed} args the arguments to encode\n * @param {String} the encoded ABI\n */\nContract.prototype._encodeMethodABI = function _encodeMethodABI() {\n    var methodSignature = this._method.signature,\n        args = this.arguments || [];\n\n    var signature = false,\n        paramsABI = this._parent.options.jsonInterface.filter(function (json) {\n            return ((methodSignature === 'constructor' && json.type === methodSignature) ||\n                ((json.signature === methodSignature || json.signature === methodSignature.replace('0x','') || json.name === methodSignature) && json.type === 'function'));\n        }).map(function (json) {\n            var inputLength = (_.isArray(json.inputs)) ? json.inputs.length : 0;\n\n            if (inputLength !== args.length) {\n                throw new Error('The number of arguments is not matching the methods required number. You need to pass '+ inputLength +' arguments.');\n            }\n\n            if (json.type === 'function') {\n                signature = json.signature;\n            }\n            return _.isArray(json.inputs) ? json.inputs : [];\n        }).map(function (inputs) {\n            return abi.encodeParameters(inputs, args).replace('0x','');\n        })[0] || '';\n\n    // return constructor\n    if(methodSignature === 'constructor') {\n        if(!this._deployData)\n            throw new Error('The contract has no contract data option set. This is necessary to append the constructor parameters.');\n\n        return this._deployData + paramsABI;\n\n    // return method\n    } else {\n\n        var returnValue = (signature) ? signature + paramsABI : paramsABI;\n\n        if(!returnValue) {\n            throw new Error('Couldn\\'t find a matching contract method named \"'+ this._method.name +'\".');\n        } else {\n            return returnValue;\n        }\n    }\n\n};\n\n\n/**\n * Decode method return values\n *\n * @method _decodeMethodReturn\n * @param {Array} outputs\n * @param {String} returnValues\n * @return {Object} decoded output return values\n */\nContract.prototype._decodeMethodReturn = function (outputs, returnValues) {\n    if (!returnValues) {\n        return null;\n    }\n\n    returnValues = returnValues.length >= 2 ? returnValues.slice(2) : returnValues;\n    var result = abi.decodeParameters(outputs, returnValues);\n\n    if (result.__length__ === 1) {\n        return result[0];\n    } else {\n        delete result.__length__;\n        return result;\n    }\n};\n\n\n/**\n * Deploys a contract and fire events based on its state: transactionHash, receipt\n *\n * All event listeners will be removed, once the last possible event is fired (\"error\", or \"receipt\")\n *\n * @method deploy\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} EventEmitter possible events are \"error\", \"transactionHash\" and \"receipt\"\n */\nContract.prototype.deploy = function(options, callback){\n\n    options = options || {};\n\n    options.arguments = options.arguments || [];\n    options = this._getOrSetDefaultOptions(options);\n\n\n    // return error, if no \"data\" is specified\n    if(!options.data) {\n        return utils._fireError(new Error('No \"data\" specified in neither the given options, nor the default options.'), null, null, callback);\n    }\n\n    var constructor = _.find(this.options.jsonInterface, function (method) {\n        return (method.type === 'constructor');\n    }) || {};\n    constructor.signature = 'constructor';\n\n    return this._createTxObject.apply({\n        method: constructor,\n        parent: this,\n        deployData: options.data,\n        _ethAccounts: this.constructor._ethAccounts\n    }, options.arguments);\n\n};\n\n/**\n * Gets the event signature and outputformatters\n *\n * @method _generateEventOptions\n * @param {Object} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event options object\n */\nContract.prototype._generateEventOptions = function() {\n    var args = Array.prototype.slice.call(arguments);\n\n    // get the callback\n    var callback = this._getCallback(args);\n\n    // get the options\n    var options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\n\n    var event = (_.isString(args[0])) ? args[0] : 'allevents';\n    event = (event.toLowerCase() === 'allevents') ? {\n            name: 'ALLEVENTS',\n            jsonInterface: this.options.jsonInterface\n        } : this.options.jsonInterface.find(function (json) {\n            return (json.type === 'event' && (json.name === event || json.signature === '0x'+ event.replace('0x','')));\n        });\n\n    if (!event) {\n        throw new Error('Event \"' + event.name + '\" doesn\\'t exist in this contract.');\n    }\n\n    if (!utils.isAddress(this.options.address)) {\n        throw new Error('This contract object doesn\\'t have address set yet, please set an address first.');\n    }\n\n    return {\n        params: this._encodeEventABI(event, options),\n        event: event,\n        callback: callback\n    };\n};\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method clone\n * @return {Object} the event subscription\n */\nContract.prototype.clone = function() {\n    return new this.constructor(this.options.jsonInterface, this.options.address, this.options);\n};\n\n\n/**\n * Adds event listeners and creates a subscription, and remove it once its fired.\n *\n * @method once\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype.once = function(event, options, callback) {\n    var args = Array.prototype.slice.call(arguments);\n\n    // get the callback\n    callback = this._getCallback(args);\n\n    if (!callback) {\n        throw new Error('Once requires a callback as the second parameter.');\n    }\n\n    // don't allow fromBlock\n    if (options)\n        delete options.fromBlock;\n\n    // don't return as once shouldn't provide \"on\"\n    this._on(event, options, function (err, res, sub) {\n        sub.unsubscribe();\n        if(_.isFunction(callback)){\n            callback(err, res, sub);\n        }\n    });\n\n    return undefined;\n};\n\n/**\n * Adds event listeners and creates a subscription.\n *\n * @method _on\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the event subscription\n */\nContract.prototype._on = function(){\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n\n\n    // prevent the event \"newListener\" and \"removeListener\" from being overwritten\n    this._checkListener('newListener', subOptions.event.name, subOptions.callback);\n    this._checkListener('removeListener', subOptions.event.name, subOptions.callback);\n\n    // TODO check if listener already exists? and reuse subscription if options are the same.\n\n    // create new subscription\n    var subscription = new Subscription({\n        subscription: {\n            params: 1,\n            inputFormatter: [formatters.inputLogFormatter],\n            outputFormatter: this._decodeEventABI.bind(subOptions.event),\n            // DUBLICATE, also in web3-eth\n            subscriptionHandler: function (output) {\n                if(output.removed) {\n                    this.emit('changed', output);\n                } else {\n                    this.emit('data', output);\n                }\n\n                if (_.isFunction(this.callback)) {\n                    this.callback(null, output, this);\n                }\n            }\n        },\n        type: 'eth',\n        requestManager: this._requestManager\n    });\n    subscription.subscribe('logs', subOptions.params, subOptions.callback || function () {});\n\n    return subscription;\n};\n\n/**\n * Get past events from contracts\n *\n * @method getPastEvents\n * @param {String} event\n * @param {Object} options\n * @param {Function} callback\n * @return {Object} the promievent\n */\nContract.prototype.getPastEvents = function(){\n    var subOptions = this._generateEventOptions.apply(this, arguments);\n\n    var getPastLogs = new Method({\n        name: 'getPastLogs',\n        call: 'eth_getLogs',\n        params: 1,\n        inputFormatter: [formatters.inputLogFormatter],\n        outputFormatter: this._decodeEventABI.bind(subOptions.event)\n    });\n    getPastLogs.setRequestManager(this._requestManager);\n    var call = getPastLogs.buildCall();\n\n    getPastLogs = null;\n\n    return call(subOptions.params, subOptions.callback);\n};\n\n\n/**\n * returns the an object with call, send, estimate functions\n *\n * @method _createTxObject\n * @returns {Object} an object with functions to call the methods\n */\nContract.prototype._createTxObject =  function _createTxObject(){\n    var args = Array.prototype.slice.call(arguments);\n    var txObject = {};\n\n    if(this.method.type === 'function') {\n\n        txObject.call = this.parent._executeMethod.bind(txObject, 'call');\n        txObject.call.request = this.parent._executeMethod.bind(txObject, 'call', true); // to make batch requests\n\n    }\n\n    txObject.send = this.parent._executeMethod.bind(txObject, 'send');\n    txObject.send.request = this.parent._executeMethod.bind(txObject, 'send', true); // to make batch requests\n    txObject.encodeABI = this.parent._encodeMethodABI.bind(txObject);\n    txObject.estimateGas = this.parent._executeMethod.bind(txObject, 'estimate');\n\n    if (args && this.method.inputs && args.length !== this.method.inputs.length) {\n        if (this.nextMethod) {\n            return this.nextMethod.apply(null, args);\n        }\n        throw errors.InvalidNumberOfParams(args.length, this.method.inputs.length, this.method.name);\n    }\n\n    txObject.arguments = args || [];\n    txObject._method = this.method;\n    txObject._parent = this.parent;\n    txObject._ethAccounts = this.parent.constructor._ethAccounts || this._ethAccounts;\n\n    if(this.deployData) {\n        txObject._deployData = this.deployData;\n    }\n\n    return txObject;\n};\n\n\n/**\n * Generates the options for the execute call\n *\n * @method _processExecuteArguments\n * @param {Array} args\n * @param {Promise} defer\n */\nContract.prototype._processExecuteArguments = function _processExecuteArguments(args, defer) {\n    var processedArgs = {};\n\n    processedArgs.type = args.shift();\n\n    // get the callback\n    processedArgs.callback = this._parent._getCallback(args);\n\n    // get block number to use for call\n    if(processedArgs.type === 'call' && args[args.length - 1] !== true && (_.isString(args[args.length - 1]) || isFinite(args[args.length - 1])))\n        processedArgs.defaultBlock = args.pop();\n\n    // get the options\n    processedArgs.options = (_.isObject(args[args.length - 1])) ? args.pop() : {};\n\n    // get the generateRequest argument for batch requests\n    processedArgs.generateRequest = (args[args.length - 1] === true)? args.pop() : false;\n\n    processedArgs.options = this._parent._getOrSetDefaultOptions(processedArgs.options);\n    processedArgs.options.data = this.encodeABI();\n\n    // add contract address\n    if(!this._deployData && !utils.isAddress(this._parent.options.address))\n        throw new Error('This contract object doesn\\'t have address set yet, please set an address first.');\n\n    if(!this._deployData)\n        processedArgs.options.to = this._parent.options.address;\n\n    // return error, if no \"data\" is specified\n    if(!processedArgs.options.data)\n        return utils._fireError(new Error('Couldn\\'t find a matching contract method, or the number of parameters is wrong.'), defer.eventEmitter, defer.reject, processedArgs.callback);\n\n    return processedArgs;\n};\n\n/**\n * Executes a call, transact or estimateGas on a contract function\n *\n * @method _executeMethod\n * @param {String} type the type this execute function should execute\n * @param {Boolean} makeRequest if true, it simply returns the request parameters, rather than executing it\n */\nContract.prototype._executeMethod = function _executeMethod(){\n    var _this = this,\n        args = this._parent._processExecuteArguments.call(this, Array.prototype.slice.call(arguments), defer),\n        defer = promiEvent((args.type !== 'send')),\n        ethAccounts = _this.constructor._ethAccounts || _this._ethAccounts;\n\n    // simple return request for batch requests\n    if(args.generateRequest) {\n\n        var payload = {\n            params: [formatters.inputCallFormatter.call(this._parent, args.options)],\n            callback: args.callback\n        };\n\n        if(args.type === 'call') {\n            payload.params.push(formatters.inputDefaultBlockNumberFormatter.call(this._parent, args.defaultBlock));\n            payload.method = 'eth_call';\n            payload.format = this._parent._decodeMethodReturn.bind(null, this._method.outputs);\n        } else {\n            payload.method = 'eth_sendTransaction';\n        }\n\n        return payload;\n\n    } else {\n\n        switch (args.type) {\n            case 'estimate':\n\n                var estimateGas = (new Method({\n                    name: 'estimateGas',\n                    call: 'eth_estimateGas',\n                    params: 1,\n                    inputFormatter: [formatters.inputCallFormatter],\n                    outputFormatter: utils.hexToNumber,\n                    requestManager: _this._parent._requestManager,\n                    accounts: ethAccounts, // is eth.accounts (necessary for wallet signing)\n                    defaultAccount: _this._parent.defaultAccount,\n                    defaultBlock: _this._parent.defaultBlock\n                })).createFunction();\n\n                return estimateGas(args.options, args.callback);\n\n            case 'call':\n\n                // TODO check errors: missing \"from\" should give error on deploy and send, call ?\n\n                var call = (new Method({\n                    name: 'call',\n                    call: 'eth_call',\n                    params: 2,\n                    inputFormatter: [formatters.inputCallFormatter, formatters.inputDefaultBlockNumberFormatter],\n                    // add output formatter for decoding\n                    outputFormatter: function (result) {\n                        return _this._parent._decodeMethodReturn(_this._method.outputs, result);\n                    },\n                    requestManager: _this._parent._requestManager,\n                    accounts: ethAccounts, // is eth.accounts (necessary for wallet signing)\n                    defaultAccount: _this._parent.defaultAccount,\n                    defaultBlock: _this._parent.defaultBlock\n                })).createFunction();\n\n                return call(args.options, args.defaultBlock, args.callback);\n\n            case 'send':\n\n                // return error, if no \"from\" is specified\n                if(!utils.isAddress(args.options.from)) {\n                    return utils._fireError(new Error('No \"from\" address specified in neither the given options, nor the default options.'), defer.eventEmitter, defer.reject, args.callback);\n                }\n\n                if (_.isBoolean(this._method.payable) && !this._method.payable && args.options.value && args.options.value > 0) {\n                    return utils._fireError(new Error('Can not send value to non-payable contract method or constructor'), defer.eventEmitter, defer.reject, args.callback);\n                }\n\n\n                // make sure receipt logs are decoded\n                var extraFormatters = {\n                    receiptFormatter: function (receipt) {\n                        if (_.isArray(receipt.logs)) {\n\n                            // decode logs\n                            var events = _.map(receipt.logs, function(log) {\n                                return _this._parent._decodeEventABI.call({\n                                    name: 'ALLEVENTS',\n                                    jsonInterface: _this._parent.options.jsonInterface\n                                }, log);\n                            });\n\n                            // make log names keys\n                            receipt.events = {};\n                            var count = 0;\n                            events.forEach(function (ev) {\n                                if (ev.event) {\n                                    // if > 1 of the same event, don't overwrite any existing events\n                                    if (receipt.events[ev.event]) {\n                                        if (Array.isArray(receipt.events[ ev.event ])) {\n                                            receipt.events[ ev.event ].push(ev);\n                                        } else {\n                                            receipt.events[ev.event] = [receipt.events[ev.event], ev];\n                                        }\n                                    } else {\n                                        receipt.events[ ev.event ] = ev;\n                                    }\n                                } else {\n                                    receipt.events[count] = ev;\n                                    count++;\n                                }\n                            });\n\n                            delete receipt.logs;\n                        }\n                        return receipt;\n                    },\n                    contractDeployFormatter: function (receipt) {\n                        var newContract = _this._parent.clone();\n                        newContract.options.address = receipt.contractAddress;\n                        return newContract;\n                    }\n                };\n\n                var sendTransaction = (new Method({\n                    name: 'sendTransaction',\n                    call: 'eth_sendTransaction',\n                    params: 1,\n                    inputFormatter: [formatters.inputTransactionFormatter],\n                    requestManager: _this._parent._requestManager,\n                    accounts: _this.constructor._ethAccounts || _this._ethAccounts, // is eth.accounts (necessary for wallet signing)\n                    defaultAccount: _this._parent.defaultAccount,\n                    defaultBlock: _this._parent.defaultBlock,\n                    extraFormatters: extraFormatters\n                })).createFunction();\n\n                return sendTransaction(args.options, args.callback);\n\n        }\n\n    }\n\n};\n\nmodule.exports = Contract;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}