{"ast":null,"code":"require(\"dotenv\").config();\nconst fs = require(\"fs\");\nconst axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst {\n  storeDataToFile\n} = require(\"ipfsHelper.js\");\nconst pinataEndpoint = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\nconst pinImage = async (selectedFile, pinataApiKey, pinataSecretApiKey) => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", selectedFile);\n    const request = {\n      method: \"post\",\n      url: pinataEndpoint,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`\n      },\n      data: form_data\n    };\n    const response = axios(request);\n    storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};","map":{"version":3,"names":["require","config","fs","axios","FormData","storeDataToFile","pinataEndpoint","pinImage","selectedFile","pinataApiKey","pinataSecretApiKey","form_data","append","request","method","url","maxContentLength","headers","pinata_api_key","pinata_secret_api_key","_boundary","data","response","console","log","err"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/pinNFT.js"],"sourcesContent":["require(\"dotenv\").config();\nconst fs = require(\"fs\");\nconst axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst { storeDataToFile } = require(\"ipfsHelper.js\");\n\nconst pinataEndpoint = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n\nconst pinImage = async (selectedFile, pinataApiKey, pinataSecretApiKey) => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", selectedFile);\n    const request = {\n      method: \"post\",\n      url: pinataEndpoint,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`,\n      },\n      data: form_data,\n    };\n    const response = axios(request);\n    storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};\n"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAC1B,MAAMC,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACrC,MAAM;EAAEK;AAAgB,CAAC,GAAGL,OAAO,CAAC,eAAe,CAAC;AAEpD,MAAMM,cAAc,GAAG,gDAAgD;AAEvE,MAAMC,QAAQ,GAAG,OAAOC,YAAY,EAAEC,YAAY,EAAEC,kBAAkB,KAAK;EACzE,MAAMC,SAAS,GAAG,IAAIP,QAAQ,EAAE;EAChC,IAAI;IACFO,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEJ,YAAY,CAAC;IACtC,MAAMK,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAET,cAAc;MACnBU,gBAAgB,EAAE,UAAU;MAC5BC,OAAO,EAAE;QACPC,cAAc,EAAET,YAAY;QAC5BU,qBAAqB,EAAET,kBAAkB;QACzC,cAAc,EAAG,iCAAgCC,SAAS,CAACS,SAAU;MACvE,CAAC;MACDC,IAAI,EAAEV;IACR,CAAC;IACD,MAAMW,QAAQ,GAAGnB,KAAK,CAACU,OAAO,CAAC;IAC/BR,eAAe,CAACiB,QAAQ,CAACD,IAAI,CAAC;IAC9BE,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;EACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEC,GAAG,CAAC;EAChE;AACF,CAAC"},"metadata":{},"sourceType":"module"}