{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _version_1 = require(\"./_version\");\n// Unknown Error\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n// Not implemented\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n// Missing new operator to an object\n//  - name: The name of the class\nexports.MISSING_NEW = 'MISSING_NEW';\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - argument: The argument name that was invalid\n//   - value: The value of the argument\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\n// Insufficien funds (< value + gasLimit * gasPrice)\n//   - transaction: the transaction attempted\nexports.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS';\n// Nonce has already been used\n//   - transaction: the transaction attempted\nexports.NONCE_EXPIRED = 'NONCE_EXPIRED';\n// The replacement fee for the transaction is too low\n//   - transaction: the transaction attempted\nexports.REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED';\n// Unsupported operation\n//   - operation\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\n// @TODO: Enum\nfunction throwError(message, code, params) {\n  if (_censorErrors) {\n    throw new Error('unknown error');\n  }\n  if (!code) {\n    code = exports.UNKNOWN_ERROR;\n  }\n  if (!params) {\n    params = {};\n  }\n  var messageDetails = [];\n  Object.keys(params).forEach(function (key) {\n    try {\n      messageDetails.push(key + '=' + JSON.stringify(params[key]));\n    } catch (error) {\n      messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n    }\n  });\n  messageDetails.push(\"version=\" + _version_1.version);\n  var reason = message;\n  if (messageDetails.length) {\n    message += ' (' + messageDetails.join(', ') + ')';\n  }\n  // @TODO: Any??\n  var error = new Error(message);\n  error.reason = reason;\n  error.code = code;\n  Object.keys(params).forEach(function (key) {\n    error[key] = params[key];\n  });\n  throw error;\n}\nexports.throwError = throwError;\nfunction checkNew(self, kind) {\n  if (!(self instanceof kind)) {\n    throwError('missing new', exports.MISSING_NEW, {\n      name: kind.name\n    });\n  }\n}\nexports.checkNew = checkNew;\nfunction checkArgumentCount(count, expectedCount, suffix) {\n  if (!suffix) {\n    suffix = '';\n  }\n  if (count < expectedCount) {\n    throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, {\n      count: count,\n      expectedCount: expectedCount\n    });\n  }\n  if (count > expectedCount) {\n    throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, {\n      count: count,\n      expectedCount: expectedCount\n    });\n  }\n}\nexports.checkArgumentCount = checkArgumentCount;\nfunction setCensorship(censorship, permanent) {\n  if (_permanentCensorErrors) {\n    throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, {\n      operation: 'setCensorship'\n    });\n  }\n  _censorErrors = !!censorship;\n  _permanentCensorErrors = !!permanent;\n}\nexports.setCensorship = setCensorship;\nfunction checkNormalize() {\n  try {\n    // Make sure all forms of normalization are supported\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n      try {\n        \"test\".normalize(form);\n      } catch (error) {\n        throw new Error('missing ' + form);\n      }\n    });\n    if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error('broken implementation');\n    }\n  } catch (error) {\n    throwError('platform missing String.prototype.normalize', exports.UNSUPPORTED_OPERATION, {\n      operation: 'String.prototype.normalize',\n      form: error.message\n    });\n  }\n}\nexports.checkNormalize = checkNormalize;\nvar LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warn: 3,\n  error: 4,\n  off: 5\n};\nvar LogLevel = LogLevels[\"default\"];\nfunction setLogLevel(logLevel) {\n  var level = LogLevels[logLevel];\n  if (level == null) {\n    warn(\"invliad log level - \" + logLevel);\n    return;\n  }\n  LogLevel = level;\n}\nexports.setLogLevel = setLogLevel;\nfunction log(logLevel, args) {\n  if (LogLevel > LogLevels[logLevel]) {\n    return;\n  }\n  console.log.apply(console, args);\n}\nfunction warn() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  log(\"warn\", args);\n}\nexports.warn = warn;\nfunction info() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  log(\"info\", args);\n}\nexports.info = info;","map":{"version":3,"names":["Object","defineProperty","exports","value","_version_1","require","UNKNOWN_ERROR","NOT_IMPLEMENTED","MISSING_NEW","CALL_EXCEPTION","INVALID_ARGUMENT","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","NUMERIC_FAULT","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNSUPPORTED_OPERATION","_permanentCensorErrors","_censorErrors","throwError","message","code","params","Error","messageDetails","keys","forEach","key","push","JSON","stringify","error","toString","version","reason","length","join","checkNew","self","kind","name","checkArgumentCount","count","expectedCount","suffix","setCensorship","censorship","permanent","operation","checkNormalize","form","normalize","String","fromCharCode","LogLevels","debug","info","warn","off","LogLevel","setLogLevel","logLevel","level","log","args","console","apply","_i","arguments"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/ethers/errors.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _version_1 = require(\"./_version\");\n// Unknown Error\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n// Not implemented\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n// Missing new operator to an object\n//  - name: The name of the class\nexports.MISSING_NEW = 'MISSING_NEW';\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - argument: The argument name that was invalid\n//   - value: The value of the argument\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\n// Insufficien funds (< value + gasLimit * gasPrice)\n//   - transaction: the transaction attempted\nexports.INSUFFICIENT_FUNDS = 'INSUFFICIENT_FUNDS';\n// Nonce has already been used\n//   - transaction: the transaction attempted\nexports.NONCE_EXPIRED = 'NONCE_EXPIRED';\n// The replacement fee for the transaction is too low\n//   - transaction: the transaction attempted\nexports.REPLACEMENT_UNDERPRICED = 'REPLACEMENT_UNDERPRICED';\n// Unsupported operation\n//   - operation\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\n// @TODO: Enum\nfunction throwError(message, code, params) {\n    if (_censorErrors) {\n        throw new Error('unknown error');\n    }\n    if (!code) {\n        code = exports.UNKNOWN_ERROR;\n    }\n    if (!params) {\n        params = {};\n    }\n    var messageDetails = [];\n    Object.keys(params).forEach(function (key) {\n        try {\n            messageDetails.push(key + '=' + JSON.stringify(params[key]));\n        }\n        catch (error) {\n            messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n        }\n    });\n    messageDetails.push(\"version=\" + _version_1.version);\n    var reason = message;\n    if (messageDetails.length) {\n        message += ' (' + messageDetails.join(', ') + ')';\n    }\n    // @TODO: Any??\n    var error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n    });\n    throw error;\n}\nexports.throwError = throwError;\nfunction checkNew(self, kind) {\n    if (!(self instanceof kind)) {\n        throwError('missing new', exports.MISSING_NEW, { name: kind.name });\n    }\n}\nexports.checkNew = checkNew;\nfunction checkArgumentCount(count, expectedCount, suffix) {\n    if (!suffix) {\n        suffix = '';\n    }\n    if (count < expectedCount) {\n        throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n    if (count > expectedCount) {\n        throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n}\nexports.checkArgumentCount = checkArgumentCount;\nfunction setCensorship(censorship, permanent) {\n    if (_permanentCensorErrors) {\n        throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, { operation: 'setCensorship' });\n    }\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n}\nexports.setCensorship = setCensorship;\nfunction checkNormalize() {\n    try {\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n            try {\n                \"test\".normalize(form);\n            }\n            catch (error) {\n                throw new Error('missing ' + form);\n            }\n        });\n        if (String.fromCharCode(0xe9).normalize('NFD') !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error('broken implementation');\n        }\n    }\n    catch (error) {\n        throwError('platform missing String.prototype.normalize', exports.UNSUPPORTED_OPERATION, { operation: 'String.prototype.normalize', form: error.message });\n    }\n}\nexports.checkNormalize = checkNormalize;\nvar LogLevels = { debug: 1, \"default\": 2, info: 2, warn: 3, error: 4, off: 5 };\nvar LogLevel = LogLevels[\"default\"];\nfunction setLogLevel(logLevel) {\n    var level = LogLevels[logLevel];\n    if (level == null) {\n        warn(\"invliad log level - \" + logLevel);\n        return;\n    }\n    LogLevel = level;\n}\nexports.setLogLevel = setLogLevel;\nfunction log(logLevel, args) {\n    if (LogLevel > LogLevels[logLevel]) {\n        return;\n    }\n    console.log.apply(console, args);\n}\nfunction warn() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"warn\", args);\n}\nexports.warn = warn;\nfunction info() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    log(\"info\", args);\n}\nexports.info = info;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}