{"ast":null,"code":"import axios from \"axios\";\nconst FormData = require(\"form-data\");\nconst {\n  storeDataToFile\n} = require(\"./ipfsHelper.js\");\nconst pinataEndpoint = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\nconst pinImage = async (selectedFile, pinataApiKey, pinataSecretApiKey) => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", selectedFile, selectedFile.name);\n    console.log(form_data);\n    const request = {\n      method: \"post\",\n      url: pinataEndpoint,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`\n      },\n      data: form_data\n    };\n    const response = await axios(request);\n    await storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};\nexport default pinImage;","map":{"version":3,"names":["axios","FormData","require","storeDataToFile","pinataEndpoint","pinImage","selectedFile","pinataApiKey","pinataSecretApiKey","form_data","append","name","console","log","request","method","url","maxContentLength","headers","pinata_api_key","pinata_secret_api_key","_boundary","data","response","err"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/pinNFT.js"],"sourcesContent":["import axios from \"axios\";\nconst FormData = require(\"form-data\");\nconst { storeDataToFile } = require(\"./ipfsHelper.js\");\n\nconst pinataEndpoint = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n\nconst pinImage = async (selectedFile, pinataApiKey, pinataSecretApiKey) => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", selectedFile, selectedFile.name);\n    console.log(form_data);\n    const request = {\n      method: \"post\",\n      url: pinataEndpoint,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`,\n      },\n      data: form_data,\n    };\n    const response = await axios(request);\n    await storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};\n\nexport default pinImage;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAEtD,MAAME,cAAc,GAAG,gDAAgD;AAEvE,MAAMC,QAAQ,GAAG,OAAOC,YAAY,EAAEC,YAAY,EAAEC,kBAAkB,KAAK;EACzE,MAAMC,SAAS,GAAG,IAAIR,QAAQ,EAAE;EAChC,IAAI;IACFQ,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEJ,YAAY,EAAEA,YAAY,CAACK,IAAI,CAAC;IACzDC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;IACtB,MAAMK,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAEZ,cAAc;MACnBa,gBAAgB,EAAE,UAAU;MAC5BC,OAAO,EAAE;QACPC,cAAc,EAAEZ,YAAY;QAC5Ba,qBAAqB,EAAEZ,kBAAkB;QACzC,cAAc,EAAG,iCAAgCC,SAAS,CAACY,SAAU;MACvE,CAAC;MACDC,IAAI,EAAEb;IACR,CAAC;IACD,MAAMc,QAAQ,GAAG,MAAMvB,KAAK,CAACc,OAAO,CAAC;IACrC,MAAMX,eAAe,CAACoB,QAAQ,CAACD,IAAI,CAAC;IACpCV,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;EACvE,CAAC,CAAC,OAAOW,GAAG,EAAE;IACZZ,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEW,GAAG,CAAC;EAChE;AACF,CAAC;AAED,eAAenB,QAAQ"},"metadata":{},"sourceType":"module"}