{"ast":null,"code":"/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ENS.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar config = require('./config');\nvar Registry = require('./contracts/Registry');\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\n\n/**\n * Constructs a new instance of ENS\n *\n * @method ENS\n * @param {Object} eth\n * @constructor\n */\nfunction ENS(eth) {\n  this.eth = eth;\n}\nObject.defineProperty(ENS.prototype, 'registry', {\n  get: function () {\n    return new Registry(this);\n  },\n  enumerable: true\n});\nObject.defineProperty(ENS.prototype, 'resolverMethodHandler', {\n  get: function () {\n    return new ResolverMethodHandler(this.registry);\n  },\n  enumerable: true\n});\n\n/**\n * @param {string} name\n * @returns {Promise<Contract>}\n */\nENS.prototype.resolver = function (name) {\n  return this.registry.resolver(name);\n};\n\n/**\n * Returns the address record associated with a name.\n *\n * @method getAddress\n * @param {string} name\n * @param {function} callback\n * @return {eventifiedPromise}\n */\nENS.prototype.getAddress = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n\n/**\n * Sets a new address\n *\n * @method setAddress\n * @param {string} name\n * @param {string} address\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setAddress = function (name, address, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\n};\n\n/**\n * Returns the public key\n *\n * @method getPubkey\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getPubkey = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'pubkey', [], callback).call(callback);\n};\n\n/**\n * Set the new public key\n *\n * @method setPubkey\n * @param {string} name\n * @param {string} x\n * @param {string} y\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setPubkey = function (name, x, y, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\n};\n\n/**\n * Returns the content\n *\n * @method getContent\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getContent = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n\n/**\n * Set the content\n *\n * @method setContent\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {Object} sendOptions\n * @returns {eventifiedPromise}\n */\nENS.prototype.setContent = function (name, hash, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Get the multihash\n *\n * @method getMultihash\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getMultihash = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n\n/**\n * Set the multihash\n *\n * @method setMultihash\n * @param {string} name\n * @param {string} hash\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setMultihash = function (name, hash, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Checks if the current used network is synced and looks for ENS support there.\n * Throws an error if not.\n *\n * @returns {Promise<Block>}\n */\nENS.prototype.checkNetwork = function () {\n  var self = this;\n  return self.eth.getBlock('latest').then(function (block) {\n    var headAge = new Date() / 1000 - block.timestamp;\n    if (headAge > 3600) {\n      throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n    }\n    return self.eth.net.getNetworkType();\n  }).then(function (networkType) {\n    var addr = config.addresses[networkType];\n    if (typeof addr === 'undefined') {\n      throw new Error(\"ENS is not supported on network \" + networkType);\n    }\n    return addr;\n  });\n};\nmodule.exports = ENS;","map":{"version":3,"names":["config","require","Registry","ResolverMethodHandler","ENS","eth","Object","defineProperty","prototype","get","enumerable","registry","resolver","name","getAddress","callback","resolverMethodHandler","method","call","setAddress","address","sendOptions","send","getPubkey","setPubkey","x","y","getContent","setContent","hash","getMultihash","setMultihash","checkNetwork","self","getBlock","then","block","headAge","Date","timestamp","Error","net","getNetworkType","networkType","addr","addresses","module","exports"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/web3-eth-ens/src/ENS.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ENS.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar config = require('./config');\nvar Registry = require('./contracts/Registry');\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\n\n/**\n * Constructs a new instance of ENS\n *\n * @method ENS\n * @param {Object} eth\n * @constructor\n */\nfunction ENS(eth) {\n    this.eth = eth;\n}\n\nObject.defineProperty(ENS.prototype, 'registry', {\n    get: function () {\n        return new Registry(this);\n    },\n    enumerable: true\n});\n\nObject.defineProperty(ENS.prototype, 'resolverMethodHandler', {\n    get: function () {\n        return new ResolverMethodHandler(this.registry);\n    },\n    enumerable: true\n});\n\n/**\n * @param {string} name\n * @returns {Promise<Contract>}\n */\nENS.prototype.resolver = function (name) {\n    return this.registry.resolver(name);\n};\n\n/**\n * Returns the address record associated with a name.\n *\n * @method getAddress\n * @param {string} name\n * @param {function} callback\n * @return {eventifiedPromise}\n */\nENS.prototype.getAddress = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n\n/**\n * Sets a new address\n *\n * @method setAddress\n * @param {string} name\n * @param {string} address\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setAddress = function (name, address, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\n};\n\n/**\n * Returns the public key\n *\n * @method getPubkey\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getPubkey = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'pubkey', [], callback).call(callback);\n};\n\n/**\n * Set the new public key\n *\n * @method setPubkey\n * @param {string} name\n * @param {string} x\n * @param {string} y\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setPubkey = function (name, x, y, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\n};\n\n/**\n * Returns the content\n *\n * @method getContent\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getContent = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n\n/**\n * Set the content\n *\n * @method setContent\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {Object} sendOptions\n * @returns {eventifiedPromise}\n */\nENS.prototype.setContent = function (name, hash, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Get the multihash\n *\n * @method getMultihash\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getMultihash = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n\n/**\n * Set the multihash\n *\n * @method setMultihash\n * @param {string} name\n * @param {string} hash\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setMultihash = function (name, hash, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Checks if the current used network is synced and looks for ENS support there.\n * Throws an error if not.\n *\n * @returns {Promise<Block>}\n */\nENS.prototype.checkNetwork = function () {\n    var self = this;\n    return self.eth.getBlock('latest').then(function (block) {\n        var headAge = new Date() / 1000 - block.timestamp;\n        if (headAge > 3600) {\n            throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n        }\n        return self.eth.net.getNetworkType();\n    }).then(function (networkType) {\n        var addr = config.addresses[networkType];\n        if (typeof addr === 'undefined') {\n            throw new Error(\"ENS is not supported on network \" + networkType);\n        }\n\n        return addr;\n    });\n};\n\nmodule.exports = ENS;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}