{"ast":null,"code":"require(\"dotenv\").config();\nconst fs = require(\"fs\");\nconst axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst {\n  storeDataToFile\n} = require(\"../../scripts/ipfsHelper.js\");\nconst pinataEndpoint = process.env.PINATA_ENDPOINT;\nconst form_data = new FormData();\ntry {\n  form_data.append(\"file\", selectedFile);\n  const request = {\n    method: \"post\",\n    url: pinataEndpoint,\n    maxContentLength: \"Infinity\",\n    headers: {\n      pinata_api_key: pinataApiKey,\n      pinata_secret_api_key: pinataSecretApiKey,\n      \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`\n    },\n    data: form_data\n  };\n  const response = axios(request);\n  storeDataToFile(response.data);\n  console.log(\"Successfully pinned image, response added to JSON file\");\n} catch (err) {\n  console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n}","map":{"version":3,"names":["require","config","fs","axios","FormData","storeDataToFile","pinataEndpoint","process","env","PINATA_ENDPOINT","form_data","append","selectedFile","request","method","url","maxContentLength","headers","pinata_api_key","pinataApiKey","pinata_secret_api_key","pinataSecretApiKey","_boundary","data","response","console","log","err"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/scripts/pinNFT.js"],"sourcesContent":["require(\"dotenv\").config();\nconst fs = require(\"fs\");\nconst axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst { storeDataToFile } = require(\"../../scripts/ipfsHelper.js\");\n\nconst pinataEndpoint = process.env.PINATA_ENDPOINT;\n\nconst form_data = new FormData();\ntry {\n  form_data.append(\"file\", selectedFile);\n  const request = {\n    method: \"post\",\n    url: pinataEndpoint,\n    maxContentLength: \"Infinity\",\n    headers: {\n      pinata_api_key: pinataApiKey,\n      pinata_secret_api_key: pinataSecretApiKey,\n      \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`,\n    },\n    data: form_data,\n  };\n  const response = axios(request);\n  storeDataToFile(response.data);\n  console.log(\"Successfully pinned image, response added to JSON file\");\n} catch (err) {\n  console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n}\n"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAC1B,MAAMC,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACrC,MAAM;EAAEK;AAAgB,CAAC,GAAGL,OAAO,CAAC,6BAA6B,CAAC;AAElE,MAAMM,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe;AAElD,MAAMC,SAAS,GAAG,IAAIN,QAAQ,EAAE;AAChC,IAAI;EACFM,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEC,YAAY,CAAC;EACtC,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,MAAM;IACdC,GAAG,EAAET,cAAc;IACnBU,gBAAgB,EAAE,UAAU;IAC5BC,OAAO,EAAE;MACPC,cAAc,EAAEC,YAAY;MAC5BC,qBAAqB,EAAEC,kBAAkB;MACzC,cAAc,EAAG,iCAAgCX,SAAS,CAACY,SAAU;IACvE,CAAC;IACDC,IAAI,EAAEb;EACR,CAAC;EACD,MAAMc,QAAQ,GAAGrB,KAAK,CAACU,OAAO,CAAC;EAC/BR,eAAe,CAACmB,QAAQ,CAACD,IAAI,CAAC;EAC9BE,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;AACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;EACZF,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEC,GAAG,CAAC;AAChE"},"metadata":{},"sourceType":"module"}