{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Unknown Error\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n// Not implemented\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n// Missing new operator to an object\n//  - name: The name of the class\nexports.MISSING_NEW = 'MISSING_NEW';\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\n// Response from a server was invalid\n//   - response: The body of the response\n//'BAD_RESPONSE',\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - arg: The argument name that was invalid\n//   - value: The value of the argument\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\n// Unsupported operation\n//   - operation\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\n// @TODO: Enum\nfunction throwError(message, code, params) {\n  if (_censorErrors) {\n    throw new Error('unknown error');\n  }\n  if (!code) {\n    code = exports.UNKNOWN_ERROR;\n  }\n  if (!params) {\n    params = {};\n  }\n  var messageDetails = [];\n  Object.keys(params).forEach(function (key) {\n    try {\n      messageDetails.push(key + '=' + JSON.stringify(params[key]));\n    } catch (error) {\n      messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n    }\n  });\n  var reason = message;\n  if (messageDetails.length) {\n    message += ' (' + messageDetails.join(', ') + ')';\n  }\n  // @TODO: Any??\n  var error = new Error(message);\n  error.reason = reason;\n  error.code = code;\n  Object.keys(params).forEach(function (key) {\n    error[key] = params[key];\n  });\n  throw error;\n}\nexports.throwError = throwError;\nfunction checkNew(self, kind) {\n  if (!(self instanceof kind)) {\n    throwError('missing new', exports.MISSING_NEW, {\n      name: kind.name\n    });\n  }\n}\nexports.checkNew = checkNew;\nfunction checkArgumentCount(count, expectedCount, suffix) {\n  if (!suffix) {\n    suffix = '';\n  }\n  if (count < expectedCount) {\n    throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, {\n      count: count,\n      expectedCount: expectedCount\n    });\n  }\n  if (count > expectedCount) {\n    throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, {\n      count: count,\n      expectedCount: expectedCount\n    });\n  }\n}\nexports.checkArgumentCount = checkArgumentCount;\nfunction setCensorship(censorship, permanent) {\n  if (_permanentCensorErrors) {\n    throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, {\n      operation: 'setCersorship'\n    });\n  }\n  _censorErrors = !!censorship;\n  _permanentCensorErrors = !!permanent;\n}\nexports.setCensorship = setCensorship;","map":{"version":3,"names":["Object","defineProperty","exports","value","UNKNOWN_ERROR","NOT_IMPLEMENTED","MISSING_NEW","CALL_EXCEPTION","INVALID_ARGUMENT","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","NUMERIC_FAULT","UNSUPPORTED_OPERATION","_permanentCensorErrors","_censorErrors","throwError","message","code","params","Error","messageDetails","keys","forEach","key","push","JSON","stringify","error","toString","reason","length","join","checkNew","self","kind","name","checkArgumentCount","count","expectedCount","suffix","setCensorship","censorship","permanent","operation"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/web3-eth-abi/node_modules/ethers/utils/errors.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Unknown Error\nexports.UNKNOWN_ERROR = 'UNKNOWN_ERROR';\n// Not implemented\nexports.NOT_IMPLEMENTED = 'NOT_IMPLEMENTED';\n// Missing new operator to an object\n//  - name: The name of the class\nexports.MISSING_NEW = 'MISSING_NEW';\n// Call exception\n//  - transaction: the transaction\n//  - address?: the contract address\n//  - args?: The arguments passed into the function\n//  - method?: The Solidity method signature\n//  - errorSignature?: The EIP848 error signature\n//  - errorArgs?: The EIP848 error parameters\n//  - reason: The reason (only for EIP848 \"Error(string)\")\nexports.CALL_EXCEPTION = 'CALL_EXCEPTION';\n// Response from a server was invalid\n//   - response: The body of the response\n//'BAD_RESPONSE',\n// Invalid argument (e.g. value is incompatible with type) to a function:\n//   - arg: The argument name that was invalid\n//   - value: The value of the argument\nexports.INVALID_ARGUMENT = 'INVALID_ARGUMENT';\n// Missing argument to a function:\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.MISSING_ARGUMENT = 'MISSING_ARGUMENT';\n// Too many arguments\n//   - count: The number of arguments received\n//   - expectedCount: The number of arguments expected\nexports.UNEXPECTED_ARGUMENT = 'UNEXPECTED_ARGUMENT';\n// Numeric Fault\n//   - operation: the operation being executed\n//   - fault: the reason this faulted\nexports.NUMERIC_FAULT = 'NUMERIC_FAULT';\n// Unsupported operation\n//   - operation\nexports.UNSUPPORTED_OPERATION = 'UNSUPPORTED_OPERATION';\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\n// @TODO: Enum\nfunction throwError(message, code, params) {\n    if (_censorErrors) {\n        throw new Error('unknown error');\n    }\n    if (!code) {\n        code = exports.UNKNOWN_ERROR;\n    }\n    if (!params) {\n        params = {};\n    }\n    var messageDetails = [];\n    Object.keys(params).forEach(function (key) {\n        try {\n            messageDetails.push(key + '=' + JSON.stringify(params[key]));\n        }\n        catch (error) {\n            messageDetails.push(key + '=' + JSON.stringify(params[key].toString()));\n        }\n    });\n    var reason = message;\n    if (messageDetails.length) {\n        message += ' (' + messageDetails.join(', ') + ')';\n    }\n    // @TODO: Any??\n    var error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n    });\n    throw error;\n}\nexports.throwError = throwError;\nfunction checkNew(self, kind) {\n    if (!(self instanceof kind)) {\n        throwError('missing new', exports.MISSING_NEW, { name: kind.name });\n    }\n}\nexports.checkNew = checkNew;\nfunction checkArgumentCount(count, expectedCount, suffix) {\n    if (!suffix) {\n        suffix = '';\n    }\n    if (count < expectedCount) {\n        throwError('missing argument' + suffix, exports.MISSING_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n    if (count > expectedCount) {\n        throwError('too many arguments' + suffix, exports.UNEXPECTED_ARGUMENT, { count: count, expectedCount: expectedCount });\n    }\n}\nexports.checkArgumentCount = checkArgumentCount;\nfunction setCensorship(censorship, permanent) {\n    if (_permanentCensorErrors) {\n        throwError('error censorship permanent', exports.UNSUPPORTED_OPERATION, { operation: 'setCersorship' });\n    }\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n}\nexports.setCensorship = setCensorship;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}