{"ast":null,"code":"var _jsxFileName = \"/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/components/NFTListingBidModal.jsx\",\n  _s = $RefreshSig$();\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { useSnackbar } from 'notistack';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useEth } from '../contexts/EthContext';\nimport { displayInGwei } from '../utils';\nimport CountdownTimer from './CountdownTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\nfunction getRPCErrorMessage(err) {\n  let msg = '';\n  console.log(err);\n  try {\n    var open = err.message.indexOf('{');\n    var close = err.message.lastIndexOf('}');\n    var j_s = err.message.substring(open, close + 1);\n    var j = JSON.parse(j_s);\n    msg = j.value.data.message;\n    open = msg.indexOf('revert');\n    close = msg.length;\n    msg = msg.substring(open + 7, close);\n  } catch (err) {\n    msg = 'An error occurred';\n  }\n  return msg;\n}\nconst logAuctionData = async auctionData => {\n  console.log('Auction data: ', auctionData);\n};\nconst calculateTimeTillExpiry = auctionData => {\n  const expiryTime = auctionData.endAt;\n  const currentTime = Math.floor(Date.now() / 1000);\n  const timeTillExpiryInSeconds = expiryTime - currentTime;\n  return {\n    timeTillExpiryHours: Math.floor(timeTillExpiryInSeconds / 3600),\n    timeTillExpiryMinutes: Math.floor(timeTillExpiryInSeconds % 3600 / 60),\n    timeTillExpirySeconds: timeTillExpiryInSeconds % 60\n  };\n};\nfunction NFTListingBidModal(_ref) {\n  _s();\n  let {\n    pinataMetadata,\n    auctionData,\n    refetchData\n  } = _ref;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    state: {\n      accounts\n    }\n  } = useEth();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    refetchData();\n  };\n  const [highestBid, setHighestBid] = useState(auctionData.highestBid);\n  const [highestBidder, setHighestBidder] = useState(auctionData.highestBidder);\n  const [role, setRole] = useState('bidder'); // 'seller', 'highestBidder', 'bidder', 'notBidder\n  const {\n    timeTillExpiryHours,\n    timeTillExpiryMinutes,\n    timeTillExpirySeconds\n  } = calculateTimeTillExpiry(auctionData);\n  const [currBidAmount, setCurrBidAmount] = useState(0);\n  useEffect(() => {\n    if (accounts[0] === auctionData.seller) {\n      setRole('seller');\n    } else if (accounts[0] === highestBidder) {\n      setRole('highestBidder');\n    } else if (auctionData.userBidAmount > 0) {\n      setRole('bidder');\n    } else {\n      setRole('notBidder');\n    }\n  }, [accounts, highestBidder, auctionData.seller, auctionData.userBidAmount, open]);\n\n  // As soon as auctionContract is ready, we'll register our Solidity event listener on Auction.bid()\n  useEffect(() => {\n    if (auctionData.auctionContract !== null) {\n      auctionData.auctionContract.events.Bid({}, (err, res) => {\n        setHighestBid(parseInt(res.returnValues.amount));\n        setHighestBidder(parseInt(res.returnValues.sender));\n        if (err) {\n          console.log(err);\n        }\n      });\n    }\n  }, [auctionData.auctionContract, setHighestBid]);\n  const handleBidAmountChange = event => {\n    setCurrBidAmount(event.target.value * Math.pow(10, 9));\n  };\n  const submitBid = async () => {\n    if (currBidAmount <= 0) {\n      enqueueSnackbar('Please enter a valid bid amount', {\n        variant: 'error'\n      });\n      return;\n    }\n    // User bid amount is lower than highestBid or less than increment\n    if (currBidAmount < highestBid) {\n      enqueueSnackbar('Bid amount is lower than highest bid', {\n        variant: 'error'\n      });\n      return;\n    } else if (currBidAmount - highestBid < auctionData.increment && accounts[0] !== auctionData.highestBidder) {\n      enqueueSnackbar('Bid amount should be greater than highest bid + increment!', {\n        variant: 'warning'\n      });\n      return;\n    } else {\n      let sendAmount = currBidAmount - auctionData.userBidAmount;\n      console.log(currBidAmount, auctionData.userBidAmount, sendAmount);\n      const auctionContract = auctionData.auctionContract;\n      try {\n        console.log(`sending amount = ${sendAmount}`);\n        await auctionContract.methods.bid().send({\n          from: accounts[0],\n          value: sendAmount\n        });\n        enqueueSnackbar('Successfully submitted bid!', {\n          variant: 'success'\n        });\n        auctionData.userBidAmount = currBidAmount;\n        setRole('highestBidder');\n        console.log(auctionData.userBidAmount);\n      } catch (err) {\n        enqueueSnackbar(getRPCErrorMessage(err), {\n          variant: 'error'\n        });\n      }\n    }\n  };\n  const handleStartAuction = async () => {\n    if (auctionData.started) {\n      enqueueSnackbar('Auction already started!', {\n        variant: 'error'\n      });\n      return;\n    }\n    const auctionContract = auctionData.auctionContract;\n    try {\n      await auctionContract.methods.start().send({\n        from: accounts[0]\n      });\n      enqueueSnackbar('Auction Successfully Started', {\n        variant: 'success'\n      });\n      console.log('auction started :D');\n    } catch (err) {\n      enqueueSnackbar(getRPCErrorMessage(err), {\n        variant: 'error'\n      });\n    }\n  };\n  const handleWithdraw = async () => {\n    // highest bidder cannot withdraw\n    if (highestBidder === accounts[0]) {\n      enqueueSnackbar('You are the highest bidder! You cannot withdraw!', {\n        variant: 'error'\n      });\n      return;\n    }\n    if (highestBidder === '0x0000000000000000000000000000000000000000') {\n      enqueueSnackbar('No one has placed any bid yet!', {\n        variant: 'error'\n      });\n      return;\n    }\n    const auctionContract = auctionData.auctionContract;\n    try {\n      await auctionContract.methods.withdraw().send({\n        from: accounts[0]\n      });\n      enqueueSnackbar('Successfully withdrew your bid amount', {\n        variant: 'success'\n      });\n    } catch (err) {\n      enqueueSnackbar(getRPCErrorMessage(err), {\n        variant: 'error'\n      });\n    }\n  };\n  const handleEnd = async () => {\n    if (auctionData.ended) {\n      enqueueSnackbar('Auction already ended!', {\n        variant: 'error'\n      });\n      return;\n    }\n    if (accounts[0] !== auctionData.seller && accounts[0] !== auctionData.highestBidder) {\n      enqueueSnackbar('You are not the seller nor highest bidder', {\n        variant: 'error'\n      });\n      return;\n    }\n    if (auctionData.endAt > Math.floor(Date.now() / 1000)) {\n      enqueueSnackbar('Auction is not over yet', {\n        variant: 'error'\n      });\n      return;\n    }\n    const auctionContract = auctionData.auctionContract;\n    try {\n      await auctionContract.methods.end().send({\n        from: accounts[0]\n      });\n      enqueueSnackbar('Successfully ended the auction!', {\n        variant: 'success'\n      });\n    } catch (err) {\n      enqueueSnackbar(getRPCErrorMessage(err), {\n        variant: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleOpen,\n      children: \"Open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: 'space-between',\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => logAuctionData(auctionData),\n            children: \"Debug auction in console\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginLeft: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"modal-modal-title\",\n            variant: \"h6\",\n            component: \"h2\",\n            children: [\"Title: \", pinataMetadata.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"modal-modal-description\",\n            sx: {\n              mt: 2\n            },\n            children: [\"Highest Bid: \", displayInGwei(highestBid), \" gwei\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            id: \"modal-modal-description\",\n            sx: {\n              mt: 2\n            },\n            children: [\"Time Till Expiry:\", ' ', auctionData.ended ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Auction has already ended\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this) : auctionData.started ? /*#__PURE__*/_jsxDEV(CountdownTimer, {\n              initialHour: timeTillExpiryHours,\n              initialMinute: timeTillExpiryMinutes,\n              initialSecond: timeTillExpirySeconds\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Auction has not yet started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '10px',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              gap: \"10px\",\n              children: [role === 'seller' && /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"As the seller, you can\", ' ', /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleStartAuction,\n                  children: \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleEnd,\n                  children: \"End\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), (role === 'notBidder' || role === 'bidder') && /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"modal-bid\",\n                  label: \"My Bid (GWei)\",\n                  type: \"number\",\n                  variant: \"outlined\",\n                  required: true,\n                  min: 0,\n                  size: \"small\",\n                  onChange: handleBidAmountChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: submitBid,\n                  children: \"Submit Bid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), role === 'bidder' && /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"No longer interested?\", ' ', /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    onClick: handleWithdraw,\n                    children: [' ', \"Withdraw\", ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), role === 'highestBidder' && /*#__PURE__*/_jsxDEV(Typography, {\n                children: [\"As the highest bidder:\", ' ', /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleEnd,\n                  children: \"End\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NFTListingBidModal, \"ozFY4ryIbMM/BiPiW2spVZbi8xw=\", false, function () {\n  return [useSnackbar, useEth];\n});\n_c = NFTListingBidModal;\nexport default NFTListingBidModal;\nvar _c;\n$RefreshReg$(_c, \"NFTListingBidModal\");","map":{"version":3,"names":["Box","Button","Modal","TextField","Typography","useSnackbar","React","useEffect","useState","useEth","displayInGwei","CountdownTimer","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","getRPCErrorMessage","err","msg","console","log","open","message","indexOf","close","lastIndexOf","j_s","substring","j","JSON","parse","value","data","length","logAuctionData","auctionData","calculateTimeTillExpiry","expiryTime","endAt","currentTime","Math","floor","Date","now","timeTillExpiryInSeconds","timeTillExpiryHours","timeTillExpiryMinutes","timeTillExpirySeconds","NFTListingBidModal","pinataMetadata","refetchData","enqueueSnackbar","state","accounts","setOpen","handleOpen","handleClose","highestBid","setHighestBid","highestBidder","setHighestBidder","role","setRole","currBidAmount","setCurrBidAmount","seller","userBidAmount","auctionContract","events","Bid","res","parseInt","returnValues","amount","sender","handleBidAmountChange","event","target","pow","submitBid","variant","increment","sendAmount","methods","bid","send","from","handleStartAuction","started","start","handleWithdraw","withdraw","handleEnd","ended","end","marginLeft","name","mt","display","flexDirection","gap","alignItems"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/components/NFTListingBidModal.jsx"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { useSnackbar } from 'notistack';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useEth } from '../contexts/EthContext';\nimport { displayInGwei } from '../utils';\nimport CountdownTimer from './CountdownTimer';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction getRPCErrorMessage(err) {\n  let msg = '';\n  console.log(err);\n  try {\n    var open = err.message.indexOf('{');\n    var close = err.message.lastIndexOf('}');\n    var j_s = err.message.substring(open, close + 1);\n    var j = JSON.parse(j_s);\n\n    msg = j.value.data.message;\n    open = msg.indexOf('revert');\n    close = msg.length;\n    msg = msg.substring(open + 7, close);\n  } catch (err) {\n    msg = 'An error occurred';\n  }\n\n  return msg;\n}\n\nconst logAuctionData = async (auctionData) => {\n  console.log('Auction data: ', auctionData);\n};\n\nconst calculateTimeTillExpiry = (auctionData) => {\n  const expiryTime = auctionData.endAt;\n  const currentTime = Math.floor(Date.now() / 1000);\n  const timeTillExpiryInSeconds = expiryTime - currentTime;\n  return {\n    timeTillExpiryHours: Math.floor(timeTillExpiryInSeconds / 3600),\n    timeTillExpiryMinutes: Math.floor((timeTillExpiryInSeconds % 3600) / 60),\n    timeTillExpirySeconds: timeTillExpiryInSeconds % 60,\n  };\n};\n\nfunction NFTListingBidModal({ pinataMetadata, auctionData, refetchData }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const {\n    state: { accounts },\n  } = useEth();\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    refetchData();\n  };\n  const [highestBid, setHighestBid] = useState(auctionData.highestBid);\n  const [highestBidder, setHighestBidder] = useState(auctionData.highestBidder);\n  const [role, setRole] = useState('bidder'); // 'seller', 'highestBidder', 'bidder', 'notBidder\n  const { timeTillExpiryHours, timeTillExpiryMinutes, timeTillExpirySeconds } =\n    calculateTimeTillExpiry(auctionData);\n  const [currBidAmount, setCurrBidAmount] = useState(0);\n\n  useEffect(() => {\n    if (accounts[0] === auctionData.seller) {\n      setRole('seller');\n    } else if (accounts[0] === highestBidder) {\n      setRole('highestBidder');\n    } else if (auctionData.userBidAmount > 0) {\n      setRole('bidder');\n    } else {\n      setRole('notBidder');\n    }\n  }, [\n    accounts,\n    highestBidder,\n    auctionData.seller,\n    auctionData.userBidAmount,\n    open,\n  ]);\n\n  // As soon as auctionContract is ready, we'll register our Solidity event listener on Auction.bid()\n  useEffect(() => {\n    if (auctionData.auctionContract !== null) {\n      auctionData.auctionContract.events.Bid({}, (err, res) => {\n        setHighestBid(parseInt(res.returnValues.amount));\n        setHighestBidder(parseInt(res.returnValues.sender));\n        if (err) {\n          console.log(err);\n        }\n      });\n    }\n  }, [auctionData.auctionContract, setHighestBid]);\n\n  const handleBidAmountChange = (event) => {\n    setCurrBidAmount(event.target.value * Math.pow(10, 9));\n  };\n\n  const submitBid = async () => {\n    if (currBidAmount <= 0) {\n      enqueueSnackbar('Please enter a valid bid amount', { variant: 'error' });\n      return;\n    }\n    // User bid amount is lower than highestBid or less than increment\n    if (currBidAmount < highestBid) {\n      enqueueSnackbar('Bid amount is lower than highest bid', {\n        variant: 'error',\n      });\n      return;\n    } else if (\n      currBidAmount - highestBid < auctionData.increment &&\n      accounts[0] !== auctionData.highestBidder\n    ) {\n      enqueueSnackbar(\n        'Bid amount should be greater than highest bid + increment!',\n        { variant: 'warning' }\n      );\n      return;\n    } else {\n      let sendAmount = currBidAmount - auctionData.userBidAmount;\n      console.log(currBidAmount, auctionData.userBidAmount, sendAmount);\n      const auctionContract = auctionData.auctionContract;\n      try {\n        console.log(`sending amount = ${sendAmount}`);\n        await auctionContract.methods\n          .bid()\n          .send({ from: accounts[0], value: sendAmount });\n        enqueueSnackbar('Successfully submitted bid!', { variant: 'success' });\n        auctionData.userBidAmount = currBidAmount;\n        setRole('highestBidder');\n        console.log(auctionData.userBidAmount);\n      } catch (err) {\n        enqueueSnackbar(getRPCErrorMessage(err), { variant: 'error' });\n      }\n    }\n  };\n\n  const handleStartAuction = async () => {\n    if (auctionData.started) {\n      enqueueSnackbar('Auction already started!', { variant: 'error' });\n      return;\n    }\n    const auctionContract = auctionData.auctionContract;\n    try {\n      await auctionContract.methods.start().send({ from: accounts[0] });\n      enqueueSnackbar('Auction Successfully Started', { variant: 'success' });\n      console.log('auction started :D');\n    } catch (err) {\n      enqueueSnackbar(getRPCErrorMessage(err), { variant: 'error' });\n    }\n  };\n\n  const handleWithdraw = async () => {\n    // highest bidder cannot withdraw\n    if (highestBidder === accounts[0]) {\n      enqueueSnackbar('You are the highest bidder! You cannot withdraw!', {\n        variant: 'error',\n      });\n      return;\n    }\n    if (highestBidder === '0x0000000000000000000000000000000000000000') {\n      enqueueSnackbar('No one has placed any bid yet!', {\n        variant: 'error',\n      });\n      return;\n    }\n    const auctionContract = auctionData.auctionContract;\n    try {\n      await auctionContract.methods.withdraw().send({ from: accounts[0] });\n      enqueueSnackbar('Successfully withdrew your bid amount', {\n        variant: 'success',\n      });\n    } catch (err) {\n      enqueueSnackbar(getRPCErrorMessage(err), { variant: 'error' });\n    }\n  };\n\n  const handleEnd = async () => {\n    if (auctionData.ended) {\n      enqueueSnackbar('Auction already ended!', { variant: 'error' });\n      return;\n    }\n    if (\n      accounts[0] !== auctionData.seller &&\n      accounts[0] !== auctionData.highestBidder\n    ) {\n      enqueueSnackbar('You are not the seller nor highest bidder', {\n        variant: 'error',\n      });\n      return;\n    }\n    if (auctionData.endAt > Math.floor(Date.now() / 1000)) {\n      enqueueSnackbar('Auction is not over yet', { variant: 'error' });\n      return;\n    }\n    const auctionContract = auctionData.auctionContract;\n    try {\n      await auctionContract.methods.end().send({ from: accounts[0] });\n      enqueueSnackbar('Successfully ended the auction!', {\n        variant: 'success',\n      });\n    } catch (err) {\n      enqueueSnackbar(getRPCErrorMessage(err), { variant: 'error' });\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Open</Button>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style}>\n          <Box display=\"flex\" justifyContent={'space-between'}>\n            <Button onClick={() => logAuctionData(auctionData)}>\n              Debug auction in console\n            </Button>\n            <Button onClick={handleClose}>Close</Button>\n          </Box>\n          <Box\n            sx={{\n              marginLeft: '14px',\n            }}\n          >\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Title: {pinataMetadata.name}\n            </Typography>\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n              Highest Bid: {displayInGwei(highestBid)} gwei\n            </Typography>\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n              Time Till Expiry:{' '}\n              {auctionData.ended ? (\n                <span>\n                  <i>Auction has already ended</i>\n                </span>\n              ) : auctionData.started ? (\n                <CountdownTimer\n                  initialHour={timeTillExpiryHours}\n                  initialMinute={timeTillExpiryMinutes}\n                  initialSecond={timeTillExpirySeconds}\n                />\n              ) : (\n                <span>\n                  <i>Auction has not yet started</i>\n                </span>\n              )}\n            </Typography>\n            <hr />\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px',\n                alignItems: 'center',\n              }}\n            >\n              <Box\n                display=\"flex\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n                gap=\"10px\"\n              >\n                {role === 'seller' && (\n                  <Typography>\n                    As the seller, you can{' '}\n                    <Button variant=\"contained\" onClick={handleStartAuction}>\n                      Start\n                    </Button>{' '}\n                    <Button variant=\"contained\" onClick={handleEnd}>\n                      End\n                    </Button>\n                  </Typography>\n                )}\n                {(role === 'notBidder' || role === 'bidder') && (\n                  <Box display=\"flex\">\n                    <TextField\n                      id=\"modal-bid\"\n                      label=\"My Bid (GWei)\"\n                      type=\"number\"\n                      variant=\"outlined\"\n                      required\n                      min={0}\n                      size=\"small\"\n                      onChange={handleBidAmountChange}\n                    />\n                    <Button variant=\"contained\" onClick={submitBid}>\n                      Submit Bid\n                    </Button>\n                  </Box>\n                )}\n\n                {role === 'bidder' && (\n                  <Box display=\"flex\">\n                    <Typography>\n                      No longer interested?{' '}\n                      <Button variant=\"contained\" onClick={handleWithdraw}>\n                        {' '}\n                        Withdraw{' '}\n                      </Button>\n                    </Typography>\n                  </Box>\n                )}\n\n                {role === 'highestBidder' && (\n                  <Typography>\n                    As the highest bidder:{' '}\n                    <Button variant=\"contained\" onClick={handleEnd}>\n                      End\n                    </Button>\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Modal>\n    </>\n  );\n}\n\nexport default NFTListingBidModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}