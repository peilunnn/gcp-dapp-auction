{"ast":null,"code":"require(\"dotenv\").config();\nconst fs = require(\"fs\");\nconst axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst {\n  storeDataToFile\n} = require(\"../scripts/ipfsHelper.js\");\nconst pinataEndpoint = process.env.PINATA_ENDPOINT;\nconst pinImage = async filePath => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", selectedFile);\n    const request = {\n      method: \"post\",\n      url: pinataEndpoint,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: pinataApiKey,\n        pinata_secret_api_key: pinataSecretApiKey,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`\n      },\n      data: form_data\n    };\n    const response = axios(request);\n    storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};","map":{"version":3,"names":["require","config","fs","axios","FormData","storeDataToFile","pinataEndpoint","process","env","PINATA_ENDPOINT","pinImage","filePath","form_data","append","selectedFile","request","method","url","maxContentLength","headers","pinata_api_key","pinataApiKey","pinata_secret_api_key","pinataSecretApiKey","_boundary","data","response","console","log","err"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/pinNFT.js"],"sourcesContent":["require(\"dotenv\").config();\nconst fs = require(\"fs\");\nconst axios = require(\"axios\");\nconst FormData = require(\"form-data\");\nconst { storeDataToFile } = require(\"../scripts/ipfsHelper.js\");\n\nconst pinataEndpoint = process.env.PINATA_ENDPOINT;\n\nconst pinImage = async (filePath) => {\n\nconst form_data = new FormData();\ntry {\n  form_data.append(\"file\", selectedFile);\n  const request = {\n    method: \"post\",\n    url: pinataEndpoint,\n    maxContentLength: \"Infinity\",\n    headers: {\n      pinata_api_key: pinataApiKey,\n      pinata_secret_api_key: pinataSecretApiKey,\n      \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`,\n    },\n    data: form_data,\n  };\n  const response = axios(request);\n  storeDataToFile(response.data);\n  console.log(\"Successfully pinned image, response added to JSON file\");\n} catch (err) {\n  console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n}\n}"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAC1B,MAAMC,EAAE,GAAGF,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMG,KAAK,GAAGH,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,WAAW,CAAC;AACrC,MAAM;EAAEK;AAAgB,CAAC,GAAGL,OAAO,CAAC,0BAA0B,CAAC;AAE/D,MAAMM,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe;AAElD,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAErC,MAAMC,SAAS,GAAG,IAAIR,QAAQ,EAAE;EAChC,IAAI;IACFQ,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEC,YAAY,CAAC;IACtC,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAEX,cAAc;MACnBY,gBAAgB,EAAE,UAAU;MAC5BC,OAAO,EAAE;QACPC,cAAc,EAAEC,YAAY;QAC5BC,qBAAqB,EAAEC,kBAAkB;QACzC,cAAc,EAAG,iCAAgCX,SAAS,CAACY,SAAU;MACvE,CAAC;MACDC,IAAI,EAAEb;IACR,CAAC;IACD,MAAMc,QAAQ,GAAGvB,KAAK,CAACY,OAAO,CAAC;IAC/BV,eAAe,CAACqB,QAAQ,CAACD,IAAI,CAAC;IAC9BE,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;EACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEC,GAAG,CAAC;EAChE;AACA,CAAC"},"metadata":{},"sourceType":"module"}