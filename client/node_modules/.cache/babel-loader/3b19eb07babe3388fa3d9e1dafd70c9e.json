{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/** @file WebsocketProvider.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar errors = require('web3-core-helpers').errors;\nvar Ws = require('websocket').w3cwebsocket;\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar _btoa = null;\nvar parseURL = null;\nif (isNode) {\n  _btoa = function (str) {\n    return Buffer.from(str).toString('base64');\n  };\n  var url = require('url');\n  if (url.URL) {\n    // Use the new Node 6+ API for parsing URLs that supports username/password\n    var newURL = url.URL;\n    parseURL = function (url) {\n      return new newURL(url);\n    };\n  } else {\n    // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\n    parseURL = require('url').parse;\n  }\n} else {\n  _btoa = btoa;\n  parseURL = function (url) {\n    return new URL(url);\n  };\n}\n// Default connection ws://localhost:8546\n\nvar WebsocketProvider = function WebsocketProvider(url, options) {\n  if (!Ws) {\n    throw new Error('websocket is not available');\n  }\n  var _this = this;\n  this.responseCallbacks = {};\n  this.notificationCallbacks = [];\n  options = options || {};\n  this._customTimeout = options.timeout;\n\n  // The w3cwebsocket implementation does not support Basic Auth\n  // username/password in the URL. So generate the basic auth header, and\n  // pass through with any additional headers supplied in constructor\n  var parsedURL = parseURL(url);\n  var headers = options.headers || {};\n  var protocol = options.protocol || undefined;\n  if (parsedURL.username && parsedURL.password) {\n    headers.authorization = 'Basic ' + _btoa(parsedURL.username + ':' + parsedURL.password);\n  }\n\n  // Allow a custom client configuration\n  var clientConfig = options.clientConfig || undefined;\n\n  // Allow a custom request options\n  // https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions\n  var requestOptions = options.requestOptions || undefined;\n\n  // When all node core implementations that do not have the\n  // WHATWG compatible URL parser go out of service this line can be removed.\n  if (parsedURL.auth) {\n    headers.authorization = 'Basic ' + _btoa(parsedURL.auth);\n  }\n  this.connection = new Ws(url, protocol, undefined, headers, requestOptions, clientConfig);\n  this.addDefaultEvents();\n\n  // LISTEN FOR CONNECTION RESPONSES\n  this.connection.onmessage = function (e) {\n    /*jshint maxcomplexity: 6 */\n    var data = typeof e.data === 'string' ? e.data : '';\n    _this._parseResponse(data).forEach(function (result) {\n      var id = null;\n\n      // get the id which matches the returned id\n      if (_.isArray(result)) {\n        result.forEach(function (load) {\n          if (_this.responseCallbacks[load.id]) id = load.id;\n        });\n      } else {\n        id = result.id;\n      }\n\n      // notification\n      if (!id && result && result.method && result.method.indexOf('_subscription') !== -1) {\n        _this.notificationCallbacks.forEach(function (callback) {\n          if (_.isFunction(callback)) callback(result);\n        });\n\n        // fire the callback\n      } else if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](null, result);\n        delete _this.responseCallbacks[id];\n      }\n    });\n  };\n\n  // make property `connected` which will return the current connection status\n  Object.defineProperty(this, 'connected', {\n    get: function () {\n      return this.connection && this.connection.readyState === this.connection.OPEN;\n    },\n    enumerable: true\n  });\n};\n\n/**\n Will add the error and end event to timeout existing calls\n\n @method addDefaultEvents\n */\nWebsocketProvider.prototype.addDefaultEvents = function () {\n  var _this = this;\n  this.connection.onerror = function () {\n    _this._timeout();\n  };\n  this.connection.onclose = function () {\n    _this._timeout();\n\n    // reset all requests and callbacks\n    _this.reset();\n  };\n\n  // this.connection.on('timeout', function(){\n  //     _this._timeout();\n  // });\n};\n\n/**\n Will parse the response and make an array out of it.\n\n @method _parseResponse\n @param {String} data\n */\nWebsocketProvider.prototype._parseResponse = function (data) {\n  var _this = this,\n    returnValues = [];\n\n  // DE-CHUNKER\n  var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n  .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n  .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n  .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n  .split('|--|');\n  dechunkedData.forEach(function (data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data;\n    var result = null;\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      _this.lastChunk = data;\n\n      // start timeout to cancel all requests\n      clearTimeout(_this.lastChunkTimeout);\n      _this.lastChunkTimeout = setTimeout(function () {\n        _this._timeout();\n        throw errors.InvalidResponse(data);\n      }, 1000 * 15);\n      return;\n    }\n\n    // cancel timeout and set chunk to null\n    clearTimeout(_this.lastChunkTimeout);\n    _this.lastChunk = null;\n    if (result) returnValues.push(result);\n  });\n  return returnValues;\n};\n\n/**\n Adds a callback to the responseCallbacks object,\n which will be called if a response matching the response Id will arrive.\n\n @method _addResponseCallback\n */\nWebsocketProvider.prototype._addResponseCallback = function (payload, callback) {\n  var id = payload.id || payload[0].id;\n  var method = payload.method || payload[0].method;\n  this.responseCallbacks[id] = callback;\n  this.responseCallbacks[id].method = method;\n  var _this = this;\n\n  // schedule triggering the error response if a custom timeout is set\n  if (this._customTimeout) {\n    setTimeout(function () {\n      if (_this.responseCallbacks[id]) {\n        _this.responseCallbacks[id](errors.ConnectionTimeout(_this._customTimeout));\n        delete _this.responseCallbacks[id];\n      }\n    }, this._customTimeout);\n  }\n};\n\n/**\n Timeout all requests when the end/error event is fired\n\n @method _timeout\n */\nWebsocketProvider.prototype._timeout = function () {\n  for (var key in this.responseCallbacks) {\n    if (this.responseCallbacks.hasOwnProperty(key)) {\n      this.responseCallbacks[key](errors.InvalidConnection('on WS'));\n      delete this.responseCallbacks[key];\n    }\n  }\n};\nWebsocketProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n  if (this.connection.readyState === this.connection.CONNECTING) {\n    setTimeout(function () {\n      _this.send(payload, callback);\n    }, 10);\n    return;\n  }\n\n  // try reconnect, when connection is gone\n  // if(!this.connection.writable)\n  //     this.connection.connect({url: this.url});\n  if (this.connection.readyState !== this.connection.OPEN) {\n    console.error('connection not open on send()');\n    if (typeof this.connection.onerror === 'function') {\n      this.connection.onerror(new Error('connection not open'));\n    } else {\n      console.error('no error callback');\n    }\n    callback(new Error('connection not open'));\n    return;\n  }\n  this.connection.send(JSON.stringify(payload));\n  this._addResponseCallback(payload, callback);\n};\n\n/**\n Subscribes to provider events.provider\n\n @method on\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.on = function (type, callback) {\n  if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.push(callback);\n      break;\n    case 'connect':\n      this.connection.onopen = callback;\n      break;\n    case 'end':\n      this.connection.onclose = callback;\n      break;\n    case 'error':\n      this.connection.onerror = callback;\n      break;\n\n    // default:\n    //     this.connection.on(type, callback);\n    //     break;\n  }\n};\n\n// TODO add once\n\n/**\n Removes event listener\n\n @method removeListener\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.removeListener = function (type, callback) {\n  var _this = this;\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.forEach(function (cb, index) {\n        if (cb === callback) _this.notificationCallbacks.splice(index, 1);\n      });\n      break;\n\n    // TODO remvoving connect missing\n\n    // default:\n    //     this.connection.removeListener(type, callback);\n    //     break;\n  }\n};\n\n/**\n Removes all event listeners\n\n @method removeAllListeners\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n */\nWebsocketProvider.prototype.removeAllListeners = function (type) {\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks = [];\n      break;\n\n    // TODO remvoving connect properly missing\n\n    case 'connect':\n      this.connection.onopen = null;\n      break;\n    case 'end':\n      this.connection.onclose = null;\n      break;\n    case 'error':\n      this.connection.onerror = null;\n      break;\n    default:\n      // this.connection.removeAllListeners(type);\n      break;\n  }\n};\n\n/**\n Resets the providers, clears all callbacks\n\n @method reset\n */\nWebsocketProvider.prototype.reset = function () {\n  this._timeout();\n  this.notificationCallbacks = [];\n\n  // this.connection.removeAllListeners('error');\n  // this.connection.removeAllListeners('end');\n  // this.connection.removeAllListeners('timeout');\n\n  this.addDefaultEvents();\n};\nWebsocketProvider.prototype.disconnect = function () {\n  if (this.connection) {\n    this.connection.close();\n  }\n};\nmodule.exports = WebsocketProvider;","map":{"version":3,"names":["_","require","errors","Ws","w3cwebsocket","isNode","Object","prototype","toString","call","process","_btoa","parseURL","str","Buffer","from","url","URL","newURL","parse","btoa","WebsocketProvider","options","Error","_this","responseCallbacks","notificationCallbacks","_customTimeout","timeout","parsedURL","headers","protocol","undefined","username","password","authorization","clientConfig","requestOptions","auth","connection","addDefaultEvents","onmessage","e","data","_parseResponse","forEach","result","id","isArray","load","method","indexOf","callback","isFunction","defineProperty","get","readyState","OPEN","enumerable","onerror","_timeout","onclose","reset","returnValues","dechunkedData","replace","split","lastChunk","JSON","clearTimeout","lastChunkTimeout","setTimeout","InvalidResponse","push","_addResponseCallback","payload","ConnectionTimeout","key","hasOwnProperty","InvalidConnection","send","CONNECTING","console","error","stringify","on","type","onopen","removeListener","cb","index","splice","removeAllListeners","disconnect","close","module","exports"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/web3-providers-ws/src/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/** @file WebsocketProvider.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar errors = require('web3-core-helpers').errors;\nvar Ws = require('websocket').w3cwebsocket;\n\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n\nvar _btoa = null;\nvar parseURL = null;\nif (isNode) {\n    _btoa = function(str) {\n        return Buffer.from(str).toString('base64');\n    };\n    var url = require('url');\n    if (url.URL) {\n        // Use the new Node 6+ API for parsing URLs that supports username/password\n        var newURL = url.URL;\n        parseURL = function(url) {\n            return new newURL(url);\n        };\n    }\n    else {\n        // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\n        parseURL = require('url').parse;\n    }\n} else {\n    _btoa = btoa;\n    parseURL = function(url) {\n        return new URL(url);\n    };\n}\n// Default connection ws://localhost:8546\n\n\n\n\nvar WebsocketProvider = function WebsocketProvider(url, options)  {\n    if (!Ws) {\n        throw new Error('websocket is not available');\n    }\n\n    var _this = this;\n    this.responseCallbacks = {};\n    this.notificationCallbacks = [];\n\n    options = options || {};\n    this._customTimeout = options.timeout;\n\n    // The w3cwebsocket implementation does not support Basic Auth\n    // username/password in the URL. So generate the basic auth header, and\n    // pass through with any additional headers supplied in constructor\n    var parsedURL = parseURL(url);\n    var headers = options.headers || {};\n    var protocol = options.protocol || undefined;\n    if (parsedURL.username && parsedURL.password) {\n        headers.authorization = 'Basic ' + _btoa(parsedURL.username + ':' + parsedURL.password);\n    }\n\n    // Allow a custom client configuration\n    var clientConfig = options.clientConfig || undefined;\n    \n    // Allow a custom request options\n    // https://github.com/theturtle32/WebSocket-Node/blob/master/docs/WebSocketClient.md#connectrequesturl-requestedprotocols-origin-headers-requestoptions\n    var requestOptions = options.requestOptions || undefined;\n\n    // When all node core implementations that do not have the\n    // WHATWG compatible URL parser go out of service this line can be removed.\n    if (parsedURL.auth) {\n        headers.authorization = 'Basic ' + _btoa(parsedURL.auth);\n    }\n    this.connection = new Ws(url, protocol, undefined, headers, requestOptions, clientConfig);\n\n    this.addDefaultEvents();\n\n\n    // LISTEN FOR CONNECTION RESPONSES\n    this.connection.onmessage = function(e) {\n        /*jshint maxcomplexity: 6 */\n        var data = (typeof e.data === 'string') ? e.data : '';\n\n        _this._parseResponse(data).forEach(function(result){\n\n            var id = null;\n\n            // get the id which matches the returned id\n            if(_.isArray(result)) {\n                result.forEach(function(load){\n                    if(_this.responseCallbacks[load.id])\n                        id = load.id;\n                });\n            } else {\n                id = result.id;\n            }\n\n            // notification\n            if(!id && result && result.method && result.method.indexOf('_subscription') !== -1) {\n                _this.notificationCallbacks.forEach(function(callback){\n                    if(_.isFunction(callback))\n                        callback(result);\n                });\n\n                // fire the callback\n            } else if(_this.responseCallbacks[id]) {\n                _this.responseCallbacks[id](null, result);\n                delete _this.responseCallbacks[id];\n            }\n        });\n    };\n\n    // make property `connected` which will return the current connection status\n    Object.defineProperty(this, 'connected', {\n      get: function () {\n        return this.connection && this.connection.readyState === this.connection.OPEN;\n      },\n      enumerable: true,\n  });\n};\n\n/**\n Will add the error and end event to timeout existing calls\n\n @method addDefaultEvents\n */\nWebsocketProvider.prototype.addDefaultEvents = function(){\n    var _this = this;\n\n    this.connection.onerror = function(){\n        _this._timeout();\n    };\n\n    this.connection.onclose = function(){\n        _this._timeout();\n\n        // reset all requests and callbacks\n        _this.reset();\n    };\n\n    // this.connection.on('timeout', function(){\n    //     _this._timeout();\n    // });\n};\n\n/**\n Will parse the response and make an array out of it.\n\n @method _parseResponse\n @param {String} data\n */\nWebsocketProvider.prototype._parseResponse = function(data) {\n    var _this = this,\n        returnValues = [];\n\n    // DE-CHUNKER\n    var dechunkedData = data\n        .replace(/\\}[\\n\\r]?\\{/g,'}|--|{') // }{\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g,'}]|--|[{') // }][{\n        .replace(/\\}[\\n\\r]?\\[\\{/g,'}|--|[{') // }[{\n        .replace(/\\}\\][\\n\\r]?\\{/g,'}]|--|{') // }]{\n        .split('|--|');\n\n    dechunkedData.forEach(function(data){\n\n        // prepend the last chunk\n        if(_this.lastChunk)\n            data = _this.lastChunk + data;\n\n        var result = null;\n\n        try {\n            result = JSON.parse(data);\n\n        } catch(e) {\n\n            _this.lastChunk = data;\n\n            // start timeout to cancel all requests\n            clearTimeout(_this.lastChunkTimeout);\n            _this.lastChunkTimeout = setTimeout(function(){\n                _this._timeout();\n                throw errors.InvalidResponse(data);\n            }, 1000 * 15);\n\n            return;\n        }\n\n        // cancel timeout and set chunk to null\n        clearTimeout(_this.lastChunkTimeout);\n        _this.lastChunk = null;\n\n        if(result)\n            returnValues.push(result);\n    });\n\n    return returnValues;\n};\n\n\n/**\n Adds a callback to the responseCallbacks object,\n which will be called if a response matching the response Id will arrive.\n\n @method _addResponseCallback\n */\nWebsocketProvider.prototype._addResponseCallback = function(payload, callback) {\n    var id = payload.id || payload[0].id;\n    var method = payload.method || payload[0].method;\n\n    this.responseCallbacks[id] = callback;\n    this.responseCallbacks[id].method = method;\n\n    var _this = this;\n\n    // schedule triggering the error response if a custom timeout is set\n    if (this._customTimeout) {\n        setTimeout(function () {\n            if (_this.responseCallbacks[id]) {\n                _this.responseCallbacks[id](errors.ConnectionTimeout(_this._customTimeout));\n                delete _this.responseCallbacks[id];\n            }\n        }, this._customTimeout);\n    }\n};\n\n/**\n Timeout all requests when the end/error event is fired\n\n @method _timeout\n */\nWebsocketProvider.prototype._timeout = function() {\n    for(var key in this.responseCallbacks) {\n        if(this.responseCallbacks.hasOwnProperty(key)){\n            this.responseCallbacks[key](errors.InvalidConnection('on WS'));\n            delete this.responseCallbacks[key];\n        }\n    }\n};\n\n\nWebsocketProvider.prototype.send = function (payload, callback) {\n    var _this = this;\n\n    if (this.connection.readyState === this.connection.CONNECTING) {\n        setTimeout(function () {\n            _this.send(payload, callback);\n        }, 10);\n        return;\n    }\n\n    // try reconnect, when connection is gone\n    // if(!this.connection.writable)\n    //     this.connection.connect({url: this.url});\n    if (this.connection.readyState !== this.connection.OPEN) {\n        console.error('connection not open on send()');\n        if (typeof this.connection.onerror === 'function') {\n            this.connection.onerror(new Error('connection not open'));\n        } else {\n            console.error('no error callback');\n        }\n        callback(new Error('connection not open'));\n        return;\n    }\n\n    this.connection.send(JSON.stringify(payload));\n    this._addResponseCallback(payload, callback);\n};\n\n/**\n Subscribes to provider events.provider\n\n @method on\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.on = function (type, callback) {\n\n    if(typeof callback !== 'function')\n        throw new Error('The second parameter callback must be a function.');\n\n    switch(type){\n        case 'data':\n            this.notificationCallbacks.push(callback);\n            break;\n\n        case 'connect':\n            this.connection.onopen = callback;\n            break;\n\n        case 'end':\n            this.connection.onclose = callback;\n            break;\n\n        case 'error':\n            this.connection.onerror = callback;\n            break;\n\n        // default:\n        //     this.connection.on(type, callback);\n        //     break;\n    }\n};\n\n// TODO add once\n\n/**\n Removes event listener\n\n @method removeListener\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n @param {Function} callback   the callback to call\n */\nWebsocketProvider.prototype.removeListener = function (type, callback) {\n    var _this = this;\n\n    switch(type){\n        case 'data':\n            this.notificationCallbacks.forEach(function(cb, index){\n                if(cb === callback)\n                    _this.notificationCallbacks.splice(index, 1);\n            });\n            break;\n\n        // TODO remvoving connect missing\n\n        // default:\n        //     this.connection.removeListener(type, callback);\n        //     break;\n    }\n};\n\n/**\n Removes all event listeners\n\n @method removeAllListeners\n @param {String} type    'notifcation', 'connect', 'error', 'end' or 'data'\n */\nWebsocketProvider.prototype.removeAllListeners = function (type) {\n    switch(type){\n        case 'data':\n            this.notificationCallbacks = [];\n            break;\n\n        // TODO remvoving connect properly missing\n\n        case 'connect':\n            this.connection.onopen = null;\n            break;\n\n        case 'end':\n            this.connection.onclose = null;\n            break;\n\n        case 'error':\n            this.connection.onerror = null;\n            break;\n\n        default:\n            // this.connection.removeAllListeners(type);\n            break;\n    }\n};\n\n/**\n Resets the providers, clears all callbacks\n\n @method reset\n */\nWebsocketProvider.prototype.reset = function () {\n    this._timeout();\n    this.notificationCallbacks = [];\n\n    // this.connection.removeAllListeners('error');\n    // this.connection.removeAllListeners('end');\n    // this.connection.removeAllListeners('timeout');\n\n    this.addDefaultEvents();\n};\n\nWebsocketProvider.prototype.disconnect = function () {\n    if (this.connection) {\n        this.connection.close();\n    }\n};\n\nmodule.exports = WebsocketProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}