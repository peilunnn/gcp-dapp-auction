{"ast":null,"code":"var _jsxFileName = \"/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/components/NFTUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Card, CardContent, Typography, Button, Box } from \"@mui/material\";\nimport pinImage from \"../scripts/pinImage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst streamifier = require(\"streamifier\");\nconst fs = require(\"fs\");\nfunction NFTUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      debugger;\n      const reader = new FileReader();\n      reader.onload = () => {\n        const dataUrl = reader.result;\n        const base64Url = dataUrl.replace(/^data:image\\/png;base64,/, \"\");\n        const buffer = Buffer.from(base64Url, \"base64\");\n        const fileName = selectedFile.name;\n        const filePath = `client/assets/${fileName}`;\n        path.join(__dirname, \"../../assets/peppa.jpg\");\n        fs.writeFile(filePath, buffer, err => {\n          if (err) {\n            console.error(\"Error saving file:\", err);\n          } else {\n            console.log(\"File saved successfully.\");\n            pinImage(filePath);\n          }\n        });\n        pinImage(filePath);\n        setSelectedFile(null);\n      };\n      reader.readAsDataURL(selectedFile);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    border: 1,\n    borderRadius: 4,\n    p: 2,\n    mt: 2,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          gutterBottom: true,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              fontSize: \"1.5rem\"\n            },\n            children: \"Upload and mint a NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"upload-input\",\n          type: \"file\",\n          onChange: handleFileSelect,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"upload-input\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            component: \"span\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            size: \"large\",\n            style: {\n              fontWeight: \"bold\",\n              marginTop: 10\n            },\n            children: \"Choose File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleFileUpload,\n          disabled: !selectedFile,\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          size: \"large\",\n          style: {\n            fontWeight: \"bold\",\n            marginTop: 10,\n            backgroundColor: \"green\"\n          },\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(NFTUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = NFTUpload;\nexport default NFTUpload;\nvar _c;\n$RefreshReg$(_c, \"NFTUpload\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Button","Box","pinImage","streamifier","require","fs","NFTUpload","selectedFile","setSelectedFile","handleFileSelect","event","file","target","files","handleFileUpload","reader","FileReader","onload","dataUrl","result","base64Url","replace","buffer","Buffer","from","fileName","name","filePath","path","join","__dirname","writeFile","err","console","error","log","readAsDataURL","fontSize","display","fontWeight","marginTop","backgroundColor"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/components/NFTUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, CardContent, Typography, Button, Box } from \"@mui/material\";\nimport pinImage from \"../scripts/pinImage.js\";\nconst streamifier = require(\"streamifier\");\nconst fs = require(\"fs\");\n\nfunction NFTUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      debugger;\n      const reader = new FileReader();\n      reader.onload = () => {\n        const dataUrl = reader.result;\n        const base64Url = dataUrl.replace(/^data:image\\/png;base64,/, \"\");\n        const buffer = Buffer.from(base64Url, \"base64\");\n        const fileName = selectedFile.name;\n        const filePath = `client/assets/${fileName}`;\n\n        path.join(__dirname, \"../../assets/peppa.jpg\");\n        fs.writeFile(filePath, buffer, (err) => {\n          if (err) {\n            console.error(\"Error saving file:\", err);\n          } else {\n            console.log(\"File saved successfully.\");\n            pinImage(filePath);\n          }\n        });\n\n        pinImage(filePath);\n\n        setSelectedFile(null);\n      };\n      reader.readAsDataURL(selectedFile);\n    }\n  };\n\n  return (\n    <Box border={1} borderRadius={4} p={2} mt={2}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" component=\"div\" gutterBottom>\n            <strong style={{ fontSize: \"1.5rem\" }}>\n              Upload and mint a NFT\n            </strong>\n          </Typography>\n          <input\n            id=\"upload-input\"\n            type=\"file\"\n            onChange={handleFileSelect}\n            style={{ display: \"none\" }}\n          />\n          <label htmlFor=\"upload-input\">\n            <Button\n              component=\"span\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              size=\"large\"\n              style={{ fontWeight: \"bold\", marginTop: 10 }}\n            >\n              Choose File\n            </Button>\n          </label>\n          <Button\n            onClick={handleFileUpload}\n            disabled={!selectedFile}\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            size=\"large\"\n            style={{\n              fontWeight: \"bold\",\n              marginTop: 10,\n              backgroundColor: \"green\",\n            }}\n          >\n            Upload\n          </Button>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n\nexport default NFTUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}