{"ast":null,"code":"\"use strict\";\n\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar bytes_1 = require(\"./bytes\");\nfunction arrayifyInteger(value) {\n  var result = [];\n  while (value) {\n    result.unshift(value & 0xff);\n    value >>= 8;\n  }\n  return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n  var result = 0;\n  for (var i = 0; i < length; i++) {\n    result = result * 256 + data[offset + i];\n  }\n  return result;\n}\nfunction _encode(object) {\n  if (Array.isArray(object)) {\n    var payload = [];\n    object.forEach(function (child) {\n      payload = payload.concat(_encode(child));\n    });\n    if (payload.length <= 55) {\n      payload.unshift(0xc0 + payload.length);\n      return payload;\n    }\n    var length = arrayifyInteger(payload.length);\n    length.unshift(0xf7 + length.length);\n    return length.concat(payload);\n  }\n  var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n  if (data.length === 1 && data[0] <= 0x7f) {\n    return data;\n  } else if (data.length <= 55) {\n    data.unshift(0x80 + data.length);\n    return data;\n  }\n  var length = arrayifyInteger(data.length);\n  length.unshift(0xb7 + length.length);\n  return length.concat(data);\n}\nfunction encode(object) {\n  return bytes_1.hexlify(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n  var result = [];\n  while (childOffset < offset + 1 + length) {\n    var decoded = _decode(data, childOffset);\n    result.push(decoded.result);\n    childOffset += decoded.consumed;\n    if (childOffset > offset + 1 + length) {\n      throw new Error('invalid rlp');\n    }\n  }\n  return {\n    consumed: 1 + length,\n    result: result\n  };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n  if (data.length === 0) {\n    throw new Error('invalid rlp data');\n  }\n  // Array with extra length prefix\n  if (data[offset] >= 0xf8) {\n    var lengthLength = data[offset] - 0xf7;\n    if (offset + 1 + lengthLength > data.length) {\n      throw new Error('too short');\n    }\n    var length = unarrayifyInteger(data, offset + 1, lengthLength);\n    if (offset + 1 + lengthLength + length > data.length) {\n      throw new Error('to short');\n    }\n    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n  } else if (data[offset] >= 0xc0) {\n    var length = data[offset] - 0xc0;\n    if (offset + 1 + length > data.length) {\n      throw new Error('invalid rlp data');\n    }\n    return _decodeChildren(data, offset, offset + 1, length);\n  } else if (data[offset] >= 0xb8) {\n    var lengthLength = data[offset] - 0xb7;\n    if (offset + 1 + lengthLength > data.length) {\n      throw new Error('invalid rlp data');\n    }\n    var length = unarrayifyInteger(data, offset + 1, lengthLength);\n    if (offset + 1 + lengthLength + length > data.length) {\n      throw new Error('invalid rlp data');\n    }\n    var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n    return {\n      consumed: 1 + lengthLength + length,\n      result: result\n    };\n  } else if (data[offset] >= 0x80) {\n    var length = data[offset] - 0x80;\n    if (offset + 1 + length > data.length) {\n      throw new Error('invalid rlp data');\n    }\n    var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length));\n    return {\n      consumed: 1 + length,\n      result: result\n    };\n  }\n  return {\n    consumed: 1,\n    result: bytes_1.hexlify(data[offset])\n  };\n}\nfunction decode(data) {\n  var bytes = bytes_1.arrayify(data);\n  var decoded = _decode(bytes, 0);\n  if (decoded.consumed !== bytes.length) {\n    throw new Error('invalid rlp data');\n  }\n  return decoded.result;\n}\nexports.decode = decode;","map":{"version":3,"names":["Object","defineProperty","exports","value","bytes_1","require","arrayifyInteger","result","unshift","unarrayifyInteger","data","offset","length","i","_encode","object","Array","isArray","payload","forEach","child","concat","prototype","slice","call","arrayify","encode","hexlify","_decodeChildren","childOffset","decoded","_decode","push","consumed","Error","lengthLength","decode","bytes"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/ethers/utils/rlp.js"],"sourcesContent":["\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bytes_1 = require(\"./bytes\");\nfunction arrayifyInteger(value) {\n    var result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    var result = 0;\n    for (var i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        var payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        var length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    var data = Array.prototype.slice.call(bytes_1.arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    var length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nfunction encode(object) {\n    return bytes_1.hexlify(_encode(object));\n}\nexports.encode = encode;\nfunction _decodeChildren(data, offset, childOffset, length) {\n    var result = [];\n    while (childOffset < offset + 1 + length) {\n        var decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            throw new Error('invalid rlp');\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        throw new Error('invalid rlp data');\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        var lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('too short');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('to short');\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        var length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        var lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        var length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            throw new Error('invalid rlp data');\n        }\n        var result = bytes_1.hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: bytes_1.hexlify(data[offset]) };\n}\nfunction decode(data) {\n    var bytes = bytes_1.arrayify(data);\n    var decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        throw new Error('invalid rlp data');\n    }\n    return decoded.result;\n}\nexports.decode = decode;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}