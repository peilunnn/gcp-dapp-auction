{"ast":null,"code":"import axios from \"axios\";\nconst FormData = require(\"form-data\");\nconst {\n  storeDataToFile\n} = require(\"./ipfsHelper.js\");\n\n// TODO: load env variables\nconst REACT_APP_PINATA_API_KEY = \"608a770f740d1e70534b\";\nconst REACT_APP_PINATA_API_SECRET = \"2c01e205ab3b0d7118ba6100ae1a7e10b99d72e3dac9e4fbb3dd91b24d4af284\";\nconst PINATA_ENDPOINT = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\nconst pinImage = async readStream => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", \"\");\n    const request = {\n      method: \"post\",\n      url: PINATA_ENDPOINT,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: REACT_APP_PINATA_API_KEY,\n        pinata_secret_api_key: REACT_APP_PINATA_API_SECRET,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`\n      },\n      data: form_data\n    };\n    debugger;\n    const response = await axios(request);\n    await storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};\nexport default pinImage;","map":{"version":3,"names":["axios","FormData","require","storeDataToFile","REACT_APP_PINATA_API_KEY","REACT_APP_PINATA_API_SECRET","PINATA_ENDPOINT","pinImage","readStream","form_data","append","request","method","url","maxContentLength","headers","pinata_api_key","pinata_secret_api_key","_boundary","data","response","console","log","err"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/src/pinNFT.js"],"sourcesContent":["import axios from \"axios\";\nconst FormData = require(\"form-data\");\nconst { storeDataToFile } = require(\"./ipfsHelper.js\");\n\n// TODO: load env variables\nconst REACT_APP_PINATA_API_KEY=\"608a770f740d1e70534b\"\nconst REACT_APP_PINATA_API_SECRET=\"2c01e205ab3b0d7118ba6100ae1a7e10b99d72e3dac9e4fbb3dd91b24d4af284\"\nconst PINATA_ENDPOINT=\"https://api.pinata.cloud/pinning/pinFileToIPFS\"\n\nconst pinImage = async (readStream) => {\n  const form_data = new FormData();\n  try {\n    form_data.append(\"file\", \"\");\n    const request = {\n      method: \"post\",\n      url: PINATA_ENDPOINT,\n      maxContentLength: \"Infinity\",\n      headers: {\n        pinata_api_key: REACT_APP_PINATA_API_KEY,\n        pinata_secret_api_key: REACT_APP_PINATA_API_SECRET,\n        \"Content-Type\": `multipart/form-data; boundary=${form_data._boundary}`,\n      },\n      data: form_data,\n    };\n    debugger;\n    const response = await axios(request);\n    await storeDataToFile(response.data);\n    console.log(\"Successfully pinned image, response added to JSON file\");\n  } catch (err) {\n    console.log(\"Error occurred while pinning NFT to IPFS: \", err);\n  }\n};\n\nexport default pinImage;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;;AAEtD;AACA,MAAME,wBAAwB,GAAC,sBAAsB;AACrD,MAAMC,2BAA2B,GAAC,kEAAkE;AACpG,MAAMC,eAAe,GAAC,gDAAgD;AAEtE,MAAMC,QAAQ,GAAG,MAAOC,UAAU,IAAK;EACrC,MAAMC,SAAS,GAAG,IAAIR,QAAQ,EAAE;EAChC,IAAI;IACFQ,SAAS,CAACC,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC;IAC5B,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAEP,eAAe;MACpBQ,gBAAgB,EAAE,UAAU;MAC5BC,OAAO,EAAE;QACPC,cAAc,EAAEZ,wBAAwB;QACxCa,qBAAqB,EAAEZ,2BAA2B;QAClD,cAAc,EAAG,iCAAgCI,SAAS,CAACS,SAAU;MACvE,CAAC;MACDC,IAAI,EAAEV;IACR,CAAC;IACD;IACA,MAAMW,QAAQ,GAAG,MAAMpB,KAAK,CAACW,OAAO,CAAC;IACrC,MAAMR,eAAe,CAACiB,QAAQ,CAACD,IAAI,CAAC;IACpCE,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;EACvE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZF,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEC,GAAG,CAAC;EAChE;AACF,CAAC;AAED,eAAehB,QAAQ"},"metadata":{},"sourceType":"module"}