{"ast":null,"code":"'use strict';\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// We use this for base 36 maths\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bytes_1 = require(\"./bytes\");\nvar keccak256_1 = require(\"./keccak256\");\nvar rlp_1 = require(\"./rlp\");\nvar errors = require(\"../errors\");\n///////////////////////////////\nfunction getChecksumAddress(address) {\n  if (typeof address !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n    errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n      arg: 'address',\n      value: address\n    });\n  }\n  address = address.toLowerCase();\n  var chars = address.substring(2).split('');\n  var hashed = new Uint8Array(40);\n  for (var i_1 = 0; i_1 < 40; i_1++) {\n    hashed[i_1] = chars[i_1].charCodeAt(0);\n  }\n  hashed = bytes_1.arrayify(keccak256_1.keccak256(hashed));\n  for (var i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase();\n    }\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase();\n    }\n  }\n  return '0x' + chars.join('');\n}\n// Shims for environments that are missing some required constants and functions\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n  if (Math.log10) {\n    return Math.log10(x);\n  }\n  return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nvar ibanLookup = {};\nfor (var i = 0; i < 10; i++) {\n  ibanLookup[String(i)] = String(i);\n}\nfor (var i = 0; i < 26; i++) {\n  ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nvar safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n  address = address.toUpperCase();\n  address = address.substring(4) + address.substring(0, 2) + '00';\n  var expanded = '';\n  address.split('').forEach(function (c) {\n    expanded += ibanLookup[c];\n  });\n  // Javascript can handle integers safely up to 15 (decimal) digits\n  while (expanded.length >= safeDigits) {\n    var block = expanded.substring(0, safeDigits);\n    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n  }\n  var checksum = String(98 - parseInt(expanded, 10) % 97);\n  while (checksum.length < 2) {\n    checksum = '0' + checksum;\n  }\n  return checksum;\n}\n;\nfunction getAddress(address) {\n  var result = null;\n  if (typeof address !== 'string') {\n    errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n      arg: 'address',\n      value: address\n    });\n  }\n  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n    // Missing the 0x prefix\n    if (address.substring(0, 2) !== '0x') {\n      address = '0x' + address;\n    }\n    result = getChecksumAddress(address);\n    // It is a checksummed address with a bad checksum\n    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n      errors.throwError('bad address checksum', errors.INVALID_ARGUMENT, {\n        arg: 'address',\n        value: address\n      });\n    }\n    // Maybe ICAP? (we only support direct mode)\n  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n    // It is an ICAP address with a bad checksum\n    if (address.substring(2, 4) !== ibanChecksum(address)) {\n      errors.throwError('bad icap checksum', errors.INVALID_ARGUMENT, {\n        arg: 'address',\n        value: address\n      });\n    }\n    result = new bn_js_1.default.BN(address.substring(4), 36).toString(16);\n    while (result.length < 40) {\n      result = '0' + result;\n    }\n    result = getChecksumAddress('0x' + result);\n  } else {\n    errors.throwError('invalid address', errors.INVALID_ARGUMENT, {\n      arg: 'address',\n      value: address\n    });\n  }\n  return result;\n}\nexports.getAddress = getAddress;\nfunction getIcapAddress(address) {\n  var base36 = new bn_js_1.default.BN(getAddress(address).substring(2), 16).toString(36).toUpperCase();\n  while (base36.length < 30) {\n    base36 = '0' + base36;\n  }\n  return 'XE' + ibanChecksum('XE00' + base36) + base36;\n}\nexports.getIcapAddress = getIcapAddress;\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n  if (!transaction.from) {\n    throw new Error('missing from address');\n  }\n  var nonce = transaction.nonce;\n  return getAddress('0x' + keccak256_1.keccak256(rlp_1.encode([getAddress(transaction.from), bytes_1.stripZeros(bytes_1.hexlify(nonce))])).substring(26));\n}\nexports.getContractAddress = getContractAddress;\n// See: https://eips.ethereum.org/EIPS/eip-1014\nfunction getCreate2Address(options) {\n  var initCodeHash = options.initCodeHash;\n  if (options.initCode) {\n    if (initCodeHash) {\n      if (keccak256_1.keccak256(options.initCode) !== initCodeHash) {\n        errors.throwError(\"initCode/initCodeHash mismatch\", errors.INVALID_ARGUMENT, {\n          arg: \"options\",\n          value: options\n        });\n      }\n    } else {\n      initCodeHash = keccak256_1.keccak256(options.initCode);\n    }\n  }\n  if (!initCodeHash) {\n    errors.throwError(\"missing initCode or initCodeHash\", errors.INVALID_ARGUMENT, {\n      arg: \"options\",\n      value: options\n    });\n  }\n  var from = getAddress(options.from);\n  var salt = bytes_1.arrayify(options.salt);\n  if (salt.length !== 32) {\n    errors.throwError(\"invalid salt\", errors.INVALID_ARGUMENT, {\n      arg: \"options\",\n      value: options\n    });\n  }\n  return getAddress(\"0x\" + keccak256_1.keccak256(bytes_1.concat([\"0xff\", from, salt, initCodeHash])).substring(26));\n}\nexports.getCreate2Address = getCreate2Address;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","bn_js_1","require","bytes_1","keccak256_1","rlp_1","errors","getChecksumAddress","address","match","throwError","INVALID_ARGUMENT","arg","toLowerCase","chars","substring","split","hashed","Uint8Array","i_1","charCodeAt","arrayify","keccak256","i","toUpperCase","join","MAX_SAFE_INTEGER","log10","x","Math","log","LN10","ibanLookup","String","fromCharCode","safeDigits","floor","ibanChecksum","expanded","forEach","c","length","block","parseInt","checksum","getAddress","result","default","BN","toString","getIcapAddress","base36","getContractAddress","transaction","from","Error","nonce","encode","stripZeros","hexlify","getCreate2Address","options","initCodeHash","initCode","salt","concat"],"sources":["/home/peilunnn/Downloads/Internship Projects/gcp-dapp-auction/client/node_modules/truffle-interface-adapter/node_modules/ethers/utils/address.js"],"sourcesContent":["'use strict';\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use this for base 36 maths\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar bytes_1 = require(\"./bytes\");\nvar keccak256_1 = require(\"./keccak256\");\nvar rlp_1 = require(\"./rlp\");\nvar errors = require(\"../errors\");\n///////////////////////////////\nfunction getChecksumAddress(address) {\n    if (typeof (address) !== 'string' || !address.match(/^0x[0-9A-Fa-f]{40}$/)) {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    address = address.toLowerCase();\n    var chars = address.substring(2).split('');\n    var hashed = new Uint8Array(40);\n    for (var i_1 = 0; i_1 < 40; i_1++) {\n        hashed[i_1] = chars[i_1].charCodeAt(0);\n    }\n    hashed = bytes_1.arrayify(keccak256_1.keccak256(hashed));\n    for (var i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return '0x' + chars.join('');\n}\n// Shims for environments that are missing some required constants and functions\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nvar ibanLookup = {};\nfor (var i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (var i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nvar safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + '00';\n    var expanded = '';\n    address.split('').forEach(function (c) {\n        expanded += ibanLookup[c];\n    });\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        var block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    var checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = '0' + checksum;\n    }\n    return checksum;\n}\n;\nfunction getAddress(address) {\n    var result = null;\n    if (typeof (address) !== 'string') {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== '0x') {\n            address = '0x' + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            errors.throwError('bad address checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            errors.throwError('bad icap checksum', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n        }\n        result = (new bn_js_1.default.BN(address.substring(4), 36)).toString(16);\n        while (result.length < 40) {\n            result = '0' + result;\n        }\n        result = getChecksumAddress('0x' + result);\n    }\n    else {\n        errors.throwError('invalid address', errors.INVALID_ARGUMENT, { arg: 'address', value: address });\n    }\n    return result;\n}\nexports.getAddress = getAddress;\nfunction getIcapAddress(address) {\n    var base36 = (new bn_js_1.default.BN(getAddress(address).substring(2), 16)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = '0' + base36;\n    }\n    return 'XE' + ibanChecksum('XE00' + base36) + base36;\n}\nexports.getIcapAddress = getIcapAddress;\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nfunction getContractAddress(transaction) {\n    if (!transaction.from) {\n        throw new Error('missing from address');\n    }\n    var nonce = transaction.nonce;\n    return getAddress('0x' + keccak256_1.keccak256(rlp_1.encode([\n        getAddress(transaction.from),\n        bytes_1.stripZeros(bytes_1.hexlify(nonce))\n    ])).substring(26));\n}\nexports.getContractAddress = getContractAddress;\n// See: https://eips.ethereum.org/EIPS/eip-1014\nfunction getCreate2Address(options) {\n    var initCodeHash = options.initCodeHash;\n    if (options.initCode) {\n        if (initCodeHash) {\n            if (keccak256_1.keccak256(options.initCode) !== initCodeHash) {\n                errors.throwError(\"initCode/initCodeHash mismatch\", errors.INVALID_ARGUMENT, {\n                    arg: \"options\", value: options\n                });\n            }\n        }\n        else {\n            initCodeHash = keccak256_1.keccak256(options.initCode);\n        }\n    }\n    if (!initCodeHash) {\n        errors.throwError(\"missing initCode or initCodeHash\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    var from = getAddress(options.from);\n    var salt = bytes_1.arrayify(options.salt);\n    if (salt.length !== 32) {\n        errors.throwError(\"invalid salt\", errors.INVALID_ARGUMENT, {\n            arg: \"options\", value: options\n        });\n    }\n    return getAddress(\"0x\" + keccak256_1.keccak256(bytes_1.concat([\n        \"0xff\",\n        from,\n        salt,\n        initCodeHash\n    ])).substring(26));\n}\nexports.getCreate2Address = getCreate2Address;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}